[
 {
  "file": "/Users/zhang/Desktop/HouseKeeping 2/SHW/WorkerVC.swift",
  "offset": 571,
  "remove": 5601,
  "text": "(facilitatorID)\n        let width = self.view.frame.width\n        \n       //info = refreshServantData(facilitatorID!) as! [ServantInfo]\n        if info == []{\n            let alert =  UIAlertView(title: \"\", message: \"该商家还没有完善人员信息!\", delegate: self, cancelButtonTitle: \"确定\")\n            alert.show()\n        }\n        \n        print(\"info\\(info)\")\n        workerTable.dataSource = self\n        workerTable.delegate = self\n       \n\n        //实例化导航条\n        navigationBar = UINavigationBar(frame: CGRectMake(0, 0, width, 64))\n        self.view.addSubview(navigationBar!)\n        print(\"创建导航条详情\")\n        onMakeNavitem()\n    }\n    \n    //导航条详情\n    func reply (){\n        self.dismissViewControllerAnimated(true, completion: nil)\n    }\n    \n    func onMakeNavitem() -> UINavigationItem{\n        print(\"创建导航条step1\")\n        //创建一个导航项\n        let navigationItem = UINavigationItem()\n        //创建左边按钮\n        let leftButton =  UIBarButtonItem(barButtonSystemItem: UIBarButtonSystemItem.Reply, target: self, action: \"reply\")\n        //var leftButton =  UIBarButtonItem(title: \"返回\", style: UIBarButtonItemStyle.Bordered, target: self, action: \"reply\")\n        //导航栏的标题\n        navigationItem.title = \"人员列表\"\n        //设置导航栏左边按钮\n        navigationItem.setLeftBarButtonItem(leftButton, animated: true)\n        \n        navigationBar?.pushNavigationItem(navigationItem, animated: true)\n        \n        \n        return navigationItem\n    }\n    \n    override func viewDidLayoutSubviews() {\n        let width = self.view.frame.width\n        \n        workerTable.frame =  CGRectMake(0,64, width, self.view.frame.height)\n    }\n    \n    override func didReceiveMemoryWarning() {\n        super.didReceiveMemoryWarning()\n        // Dispose of any resources that can be recreated.\n    }\n    func  alertView(alertView: UIAlertView, clickedButtonAtIndex buttonIndex: Int) {\n        self.dismissViewControllerAnimated(true, completion: nil)\n        \n        \n    }\n\n    // MARK: - Table view data source\n    \n    \n    \n    func tableView(tableView: UITableView, cellForRowAtIndexPath indexPath: NSIndexPath) -> UITableViewCell {\n        print(\"1\")\n        let cell = tableView.dequeueReusableCellWithIdentifier(\"Servantcell\", forIndexPath: indexPath) as! workerTableViewCell\n        \n        // Configure the cell...\n        print(\"2\")\n        let workercell = info[indexPath.row] as ServantInfo\n        cell.servantName.text = \"名称:\\(workercell.servantName)\"\n        //cell.servantStatus.text = \"状态:\\(workercell.servantStatus)\"\n        cell.servantStatus.text = \"状态:\"\n        cell.Status.text = workercell.servantStatus\n        if workercell.servantStatus == \"服务中\"{\n//\n           // cell.Status.text = \"忙\"\n            cell.Status.textColor = UIColor.grayColor()\n        }else{\n            //cell.Status.text = \"空闲\"\n            cell.Status.textColor = UIColor.orangeColor()\n        }\n        \n        cell.workYears.text = \"从业年限:\\(workercell.workYears)年\"\n        //cell.servantScore.text = \"星级:\\(workercell.servantScore)\"\n        cell.servantScore.text = \"星级:\\(workercell.servantScore)\"\n//        cell.Score.image = imageForRank(workercell.servantScore )\n        //网络地址获取图片\n        //1.定义一个地址字符串常量\n        let imageUrlString:String = HttpData.http+\"/FamilyServiceSystem/upload/servant/\\(workercell.id)/\\(workercell.headPicture)\"\n//        //2.通过String类型，转换NSUrl对象\n//        let url :NSURL = NSURL(string: imageUrlString)!\n//        println(\"url:\\(url)\")\n//        //3.从网络获取数据流\n//        if let data:NSData = NSData(contentsOfURL: url){\n//            //4.通过数据流初始化图片\n//            cell.headPicture.image = UIImage(data: data)\n//        }else {\n//            \n//           cell.headPicture.image = UIImage(named: \"122.jpg\")!\n//        }\n        \n//        var data = getImageData(imageUrlString)\n//        \n//        if data == nil{\n//            println(data)\n//           cell.headPicture.image = UIImage(named: \"122.jpg\")\n//        }else{\n//            cell.headPicture.image = UIImage(data: data!)\n//            \n//        }\n//    \n        cell.headPicture.setZYHWebImage(imageUrlString, defaultImage: \"122.jpg\")\n        //cell.headPicture.image = UIImage(data: data)\n        print(\"结束了也\")\n        \n        return cell\n    }\n    \n    func imageForRank(rank:String) -> UIImage? {\n        switch rank {\n        case \"1\":\n            return UIImage(named: \"1\")\n        case \"2\":\n            return UIImage(named: \"2\")\n        case \"3\":\n            return UIImage(named: \"3\")\n        case \"4\":\n            return UIImage(named: \"4\")\n        case \"5\":\n            return UIImage(named: \"5\")\n        default:\n            return nil\n        }\n    }\n\n    func numberOfSectionsInTableView(tableView: UITableView) -> Int {\n        // #warning Potentially incomplete method implementation.\n        // Return the number of sections.\n        return 1\n    }\n    \n    func tableView(tableView: UITableView, numberOfRowsInSection section: Int) -> Int {\n        // #warning Incomplete method implementation.\n        // Return the number of rows in the section.\n        return info.count;\n    }\n\n    \n    \n    override func prepareForSegue(segue: UIStoryboardSegue, sender: AnyObject?) {\n        \n        if segue.identifier==\"toWorkerDetail\"{\n                if let indexPath = self.workerTable.indexPathForSelectedRow{\n                    let",
 }
]

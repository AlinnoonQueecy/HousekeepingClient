[
 {
  "file": "/Users/zhang/Desktop/HouseKeeping 2/SHW/BaseInfoVC.swift",
  "offset": 2314,
  "remove": 25297,
  "text": "let pageHeight = self.view.frame.height\n        //读取用户信息，如果不是第一次登录，则会自动登录\n        readNSUerDefaults()\n        //查询用户信息\n        Info = QueryInfo(customerid) as MyInfo\n        //实例化导航条\n        navigationBar = UINavigationBar(frame: CGRectMake(0, 0, self.view.frame.width, 64))\n        self.view.addSubview(navigationBar!)\n        print(\"创建导航条详情\")\n        onMakeNavitem()\n        \n//        // ScrollView详情\n        scrollView.frame = CGRectMake(0, 64, pageWidth, pageHeight)\n        scrollView.contentSize=CGSizeMake(pageWidth, pageHeight*3)\n        scrollView.contentInset = UIEdgeInsetsMake(0,0,-49, 0)\n        self.automaticallyAdjustsScrollViewInsets = false\n        scrollView.delegate = self\n        scrollView.pagingEnabled = false\n        scrollView.bounces = false\n        scrollView.showsHorizontalScrollIndicator = false\n        scrollView.alwaysBounceVertical = false\n        scrollView.showsVerticalScrollIndicator = false\n        scrollView.scrollsToTop = false\n        self.view.addSubview(scrollView)\n        \n        //1、创建手势实例，并连接方法UITapGestureRecognizer,点击手势\n        let recognizer =  UITapGestureRecognizer(target:self, action:\"touchScrollView:\")\n        print(\"touchScrollView\")\n        \n        //设置手势点击数,点1下\n        recognizer.numberOfTapsRequired = 1\n        \n        //recognizer.numberOfTouchesRequired = 1\n        \n        scrollView.addGestureRecognizer(recognizer)\n        NSNotificationCenter.defaultCenter().addObserver(self,selector:Selector(\"keyboardWillShow:\"),name:UIKeyboardWillShowNotification,object:nil)\n        NSNotificationCenter.defaultCenter().addObserver(self,selector:Selector(\"keyboardWillHide:\"),name:UIKeyboardWillHideNotification,object:nil)\n        \n        //image,label,textfield 的设置\n        let terms = Register.count as Int\n        for var i = 0;i < terms;i++ {\n            //image\n            let  image1 = UIImageView(frame:CGRectMake(CGFloat(15), CGFloat(12+i*37), CGFloat(34), CGFloat(34)))\n            image1.image = UIImage(named:image[i])\n            //label\n            let label1 = UILabel(frame: CGRectMake((CGFloat(52), CGFloat(12+i*37),CGFloat(90), CGFloat(34))))\n            label1.text = Register[i]\n            \n            \n            let button = UIButton(frame: CGRectMake(pageWidth/2-125, CGFloat(50+terms*37), 250, 30))\n            button.setTitle(\"修改并保存\", forState: UIControlState.Normal)\n            button.backgroundColor = UIColor.orangeColor()\n            button.titleLabel?.font = UIFont.systemFontOfSize(14)\n            button.showsTouchWhenHighlighted = true\n            button.addTarget(self , action: Selector(\"tapped:\"), forControlEvents: UIControlEvents.TouchUpInside)\n            button.layer.cornerRadius = 5.0\n            \n            \n            scrollView.addSubview(image1)\n            \n            scrollView.addSubview(label1)\n            scrollView.addSubview(button)\n \n            \n        }\n  \n        \n        \n        \n        \n        let customY = 12\n        //textField\n        customerID.frame = CGRectMake((CGFloat(145), CGFloat(customY),CGFloat(pageWidth-150), CGFloat(34)))\n        \n        customerID.text = Info.customerID\n        scrollView.addSubview(customerID)\n        \n        \n        customerName = UITextField(frame: CGRectMake((CGFloat(145), CGFloat(12+1*37),CGFloat(pageWidth-150), CGFloat(34))))\n        customerName.borderStyle = UITextBorderStyle.RoundedRect\n        customerName.text = Info.customerName\n        customerName.adjustsFontSizeToFitWidth=true  //当文字超出文本框宽度时，自动调整文字大小\n        customerName.minimumFontSize=14\n        customerName.becomeFirstResponder()\n        customerName.delegate = self //设置代理\n        customerName.clearButtonMode=UITextFieldViewMode.WhileEditing  //编辑时出现清除按钮\n        customerName.returnKeyType = UIReturnKeyType.Go //表示完成输入，同时会跳到另一页\n        scrollView.addSubview(customerName)\n       // self.view.addSubview(customerName)\n        \n        \n        Genderpick = UIPickerView(frame: CGRectMake(0,300, self.view.frame.width, 300))\n        Genderpick.delegate = self\n        Genderpick.dataSource = self\n        Genderpick.tag = 1\n        \n        let f = Genderpick.frame\n        let toolbar = UIToolbar(frame: CGRectMake(0, 0, f.width, (f.height * 0.15)))\n        var buttons = [UIBarButtonItem]()\n        let space = UIBarButtonItem(barButtonSystemItem: UIBarButtonSystemItem.FlexibleSpace, target: nil, action: nil)\n        buttons.append(space)\n        let doneButton = UIBarButtonItem(title: \"确定\", style: UIBarButtonItemStyle.Plain, target: self, action: \"donePressed\")\n        buttons.append(doneButton)\n        toolbar.setItems(buttons, animated: false)\n\n        customerGender = UITextField(frame: CGRectMake((CGFloat(145), CGFloat(customY+2*37),CGFloat(pageWidth-150), CGFloat(34))))\n        customerGender.borderStyle = UITextBorderStyle.RoundedRect\n        customerGender.text = Info.customerGender\n        customerGender.adjustsFontSizeToFitWidth=true  //当文字超出文本框宽度时，自动调整文字大小\n        customerGender.minimumFontSize=14\n        customerGender.becomeFirstResponder()\n        customerGender.delegate = self //设置代理\n        customerGender.clearButtonMode=UITextFieldViewMode.WhileEditing  //编辑时出现清除按钮\n        customerGender.returnKeyType = UIReturnKeyType.Go //表示完成输入，同时会跳到另一页\n        customerGender.inputView = Genderpick\n        customerGender.inputAccessoryView = toolbar\n        scrollView.addSubview(customerGender)\n\n \n\n        \n        customerBirthday = UITextField(frame: CGRectMake((CGFloat(145), CGFloat(customY+3*37),CGFloat(pageWidth-150), CGFloat(34))))\n        customerBirthday.borderStyle = UITextBorderStyle.RoundedRect\n        customerBirthday.text = Info.customerBirthday\n        customerBirthday.adjustsFontSizeToFitWidth=true  //当文字超出文本框宽度时，自动调整文字大小\n        customerBirthday.minimumFontSize=14\n//        customerBirthday.becomeFirstResponder()\n        customerBirthday.delegate = self //设置代理\n        customerBirthday.clearButtonMode=UITextFieldViewMode.WhileEditing  //编辑时出现清除按钮\n        customerBirthday.returnKeyType = UIReturnKeyType.Go //表示完成输入，同时会跳到另一页\n \n  \n        //self.view.addSubview(customerBirthday)\n        \n        // 初始化 datePicker\n        datePicker = UIDatePicker(frame: CGRectMake(0,300, self.view.frame.width, 300))\n        // 设置样式，当前设为同时显示日期\n        datePicker.datePickerMode = UIDatePickerMode.Date\n       // datePicker.hidden = true\n        datePicker.locale = NSLocale(localeIdentifier: \"zh_CN\")\n        // 设置分钟表盘的时间间隔（必须能让60整除，默认是1分钟）\n//        datePicker.minuteInterval = 5\n        // 设置日期范围（超过日期范围，会回滚到最近的有效日期）\n//        var dateFormatter = NSDateFormatter()\n//        dateFormatter.dateFormat = \"yyyy-MM-dd\"\n//        var maxDate = dateFormatter.dateFromString(\"2015-08-01 08:00:00\")\n//        var minDate = dateFormatter.dateFromString(\"2015-03-01 08:00:00\")\n//        datePicker.maximumDate = maxDate\n//        datePicker.minimumDate = minDate\n        // 设置默认时间\n        datePicker.date = NSDate()\n \n        // 响应事件（只要滚轮变化就会触发）\n       // datePicker.addTarget(self, action:Selector(\"datePickerValueChange:\"), forControlEvents: UIControlEvents.ValueChanged)\n       // scrollView.addSubview(datePicker)\n        //添加ToolBar（可以不要）\n        \n        customerBirthday.inputView = datePicker\n        customerBirthday.inputAccessoryView = toolbar\n        scrollView.addSubview(customerBirthday)\n\n      \n        \n        //座机电话\n        phoneNo = UITextField(frame: CGRectMake((CGFloat(145), CGFloat(customY+4*37),CGFloat(pageWidth-150), CGFloat(34))))\n        phoneNo.borderStyle = UITextBorderStyle.RoundedRect\n        phoneNo.text = Info.mobilePhone\n        phoneNo.adjustsFontSizeToFitWidth=true  //当文字超出文本框宽度时，自动调整文字大小\n        phoneNo.minimumFontSize=14\n        phoneNo.becomeFirstResponder()\n        phoneNo.delegate = self //设置代理\n        phoneNo.clearButtonMode=UITextFieldViewMode.WhileEditing  //编辑时出现清除按钮\n        phoneNo.returnKeyType = UIReturnKeyType.Go //表示完成输入，同时会跳到另一页\n        scrollView.addSubview(phoneNo)\n        //self.view.addSubview(phoneNo)\n\n        //联系号码\n        mobilePhone = UITextField(frame: CGRectMake((CGFloat(145), CGFloat(customY+5*37),CGFloat(pageWidth-150), CGFloat(34))))\n        mobilePhone.borderStyle = UITextBorderStyle.RoundedRect\n        mobilePhone.text = Info.phoneNo\n        mobilePhone.adjustsFontSizeToFitWidth=true  //当文字超出文本框宽度时，自动调整文字大小\n        mobilePhone.minimumFontSize=14\n        mobilePhone.becomeFirstResponder()\n        mobilePhone.delegate = self //设置代理\n        mobilePhone.clearButtonMode=UITextFieldViewMode.WhileEditing  //编辑时出现清除按钮\n        mobilePhone.returnKeyType = UIReturnKeyType.Go //表示完成输入，同时会跳到另一页\n        scrollView.addSubview(mobilePhone)\n        //self.view.addSubview(idCardNo)\n\n        \n        \n        \n      \n        emailAddress = UITextField(frame: CGRectMake((CGFloat(145), CGFloat(customY+6*37),CGFloat(pageWidth-150), CGFloat(34))))\n        emailAddress.borderStyle = UITextBorderStyle.RoundedRect\n        emailAddress.text = Info.emailAddress\n        emailAddress.adjustsFontSizeToFitWidth=true  //当文字超出文本框宽度时，自动调整文字大小\n        emailAddress.minimumFontSize=14\n        emailAddress.becomeFirstResponder()\n        emailAddress.delegate = self //设置代理\n        emailAddress.clearButtonMode=UITextFieldViewMode.WhileEditing  //编辑时出现清除按钮\n        emailAddress.returnKeyType = UIReturnKeyType.Go //表示完成输入，同时会跳到另一页\n        scrollView.addSubview(emailAddress)\n        //self.view.addSubview(emailAddress)\n//        \n        qqNumber = UITextField(frame: CGRectMake((CGFloat(145), CGFloat(customY+7*37),CGFloat(pageWidth-150), CGFloat(34))))\n        qqNumber.borderStyle = UITextBorderStyle.RoundedRect\n        qqNumber.text = Info.qqNumber\n        qqNumber.adjustsFontSizeToFitWidth=true  //当文字超出文本框宽度时，自动调整文字大小\n        qqNumber.minimumFontSize=14\n        qqNumber.becomeFirstResponder()\n        qqNumber.delegate = self //设置代理\n        qqNumber.clearButtonMode=UITextFieldViewMode.WhileEditing  //编辑时出现清除按钮\n        qqNumber.returnKeyType = UIReturnKeyType.Go //表示完成输入，同时会跳到另一页\n        scrollView.addSubview(qqNumber)\n//        self.view.addSubview(text7)\n        \n        \n//        \n//        provinces = [\"沈阳市\":[\"和平区\",\"大东区\",\"沈河区\",\"皇姑区\",\"铁西区\",\"浑南区\",\"于洪区\",\"沈北新区\",\"苏家屯区\",\"新民市\",\"辽中县\",\"康平县\",\"法库县\"]]\n//        cities = provinces.values.array[0]\n//        println(\"cities:\\(cities)\")\n        pickview = UIPickerView()\n        pickview.tag = 2\n        pickview.delegate = self\n        pickview.dataSource = self\n        let listPath  = NSBundle.mainBundle().pathForResource(\"area.plist\", ofType: nil)\n        //第一层\n        \n        root =  NSMutableArray(contentsOfFile:listPath!)!//root\n        \n        dictionary1 = root.objectAtIndex(0) as! NSDictionary//item0\n        //第二层\n        \n        cities = dictionary1.objectForKey(\"cities\") as! NSArray\n        \n        let dictionary2:NSDictionary =  cities.objectAtIndex(0) as! NSDictionary\n        //第三层\n        \n        areas = dictionary2.objectForKey(\"areas\") as! NSArray\n\n        dizhi = UITextField(frame: CGRectMake((CGFloat(145), CGFloat(customY+8*37),CGFloat(pageWidth-150), CGFloat(34))))\n        dizhi.borderStyle = UITextBorderStyle.RoundedRect\n        selectprovince = Info.customerProvince\n        selectcity = Info.customerCity\n        selectcounty = Info.customerCounty\n        dizhi.text = \"\\(selectprovince)省 \\(selectcity)市 \\(selectcounty)\"\n        dizhi.adjustsFontSizeToFitWidth=true  //当文字超出文本框宽度时，自动调整文字大小\n        dizhi.minimumFontSize=14\n        //dizhi.becomeFirstResponder()\n        dizhi.delegate = self //设置代理\n        dizhi.clearButtonMode=UITextFieldViewMode.WhileEditing  //编辑时出现清除按钮\n        dizhi.returnKeyType = UIReturnKeyType.Go //表示完成输入，同时会跳到另一页\n        dizhi.inputView = pickview\n       \n        dizhi.inputAccessoryView = toolbar\n        scrollView.addSubview(dizhi)\n        \n        contactAddress = UITextField(frame: CGRectMake((CGFloat(145), CGFloat(customY+9*37),CGFloat(pageWidth-150), CGFloat(34))))\n        contactAddress.borderStyle = UITextBorderStyle.RoundedRect\n        contactAddress.text = Info.contactAddress\n        contactAddress.adjustsFontSizeToFitWidth=true  //当文字超出文本框宽度时，自动调整文字大小\n        contactAddress.minimumFontSize=14\n        contactAddress.becomeFirstResponder()\n        contactAddress.delegate = self //设置代理\n        contactAddress.clearButtonMode=UITextFieldViewMode.WhileEditing  //编辑时出现清除按钮\n        contactAddress.returnKeyType = UIReturnKeyType.Go //表示完成输入，同时会跳到另一页\n        scrollView.addSubview(contactAddress)\n//         self.view.addSubview(contactAddress)\n        \n         scrollView.contentSize = CGSizeMake(pageWidth,64+520)\n        \n        \n    }\n    //toolBar 的函数\n    func donePressed() {\n        customerBirthday.resignFirstResponder()\n        \n        // NSDate转化NSString\n        let s = datePicker.date\n        let dateFormatter = NSDateFormatter()\n        dateFormatter.dateFormat = \"yyyy-MM-dd\"\n        let Date = dateFormatter.stringFromDate(s)\n        customerBirthday.text = \"\\(Date)\"\n        \n        customerGender.resignFirstResponder()\n        let n = Genderpick.selectedRowInComponent(0)\n        customerGender.text = Gender[n]\n        \n    \n        dizhi.resignFirstResponder()\n//        let provinceNum = pickview.selectedRowInComponent(0)\n//        \n//        let cityNum = pickview.selectedRowInComponent(1)\n//        let areaNum = pickview.selectedRowInComponent(2)\n//        \n//        \n//        let pr: AnyObject? = root[provinceNum].objectForKey(\"state\")\n//        let cit:AnyObject? = cities[cityNum].objectForKey(\"city\")\n//        \n//        \n//        selectprovince = pr as! String\n//        selectcity = cit as! String\n//        selectcounty = areas[areaNum] as! String\n        \n        \n        dizhi.text = \"\\(selectprovince)省 \\(selectcity)市 \\(selectcounty)\"\n\n       \n        \n       \n        \n        \n    }\n    //设置列数\n    func numberOfComponentsInPickerView(pickerView: UIPickerView) -> Int {\n        if pickerView.tag == 1{\n            return 1\n        }else if pickerView.tag == 2{\n        return 3\n        }\n        return 1\n    }\n    //设置行数\n    \n    func pickerView(pickerView: UIPickerView, numberOfRowsInComponent component: Int) -> Int {\n    if pickerView.tag == 2{\n        if component == 0 {\n            \n            return root.count\n        }\n        \n        \n        if component == 1 {\n            \n            return cities.count\n            \n        }\n        \n        if component == 2 {\n            \n            return areas.count\n            \n        }\n    }else if pickerView.tag == 1{\n        return 2\n        \n        }\n        return 0\n        \n\n    }\n    \n    //设置每行具体内容（titleForRow 和 viewForRow 二者实现其一即可）\n    \n    func  pickerView(pickerView: UIPickerView, titleForRow row: Int, forComponent component: Int) -> String! {\n       if pickerView.tag == 1{\n            \n            return Gender[row]\n        }else{\n        if component == 0 {\n            //return month[row]\n            //return provinces.keys.array[row]\n            return root[row].objectForKey(\"state\") as! String\n        }\n        \n        if component == 1{\n            //return week[row]\n            return cities[row].objectForKey(\"city\") as! String\n            \n        }\n        if component == 2{\n            //return week[row]\n            return areas[row] as! String\n            \n        }\n        }\n        return nil\n    }\n    \n    //选中行的操作\n    \n    func pickerView(pickerView: UIPickerView, didSelectRow row: Int, inComponent component: Int) {\n        \n        if pickerView.tag  == 2 {\n            if(component == 0){\n                \n                dictionary1 = root.objectAtIndex(row) as! NSDictionary//item0\n                //第二层\n                \n                \n                cities = dictionary1.objectForKey(\"cities\") as! NSArray\n                \n                // 重新加载二级选项并复位\n                \n                pickerView.reloadComponent(1)\n                pickerView.selectRow(0, inComponent: 1, animated: true)\n                \n                let dictionary2:NSDictionary =  cities.objectAtIndex(0) as! NSDictionary\n                \n                areas = dictionary2.objectForKey(\"areas\") as! NSArray\n                \n                // 重新加载三级选项并复位\n                \n                pickerView.reloadComponent(2)\n                pickerView.selectRow(0, inComponent: 2, animated: true)\n                \n            }\n            \n            if(component == 1){\n                \n                let dictionary2:NSDictionary =  cities.objectAtIndex(row) as! NSDictionary\n                \n                areas = dictionary2.objectForKey(\"areas\") as! NSArray\n                \n                // 重新加载三级选项并复位\n                \n                pickerView.reloadComponent(2)\n                pickerView.selectRow(0, inComponent: 2, animated: true)\n                \n                \n                \n                \n            }\n            \n            let provinceNum = pickview.selectedRowInComponent(0)\n            \n            let cityNum = pickview.selectedRowInComponent(1)\n            let areaNum = pickview.selectedRowInComponent(2)\n            \n            \n            let pr: AnyObject? = root[provinceNum].objectForKey(\"state\")\n            let cit:AnyObject? = cities[cityNum].objectForKey(\"city\")\n            \n            \n            selectprovince = pr as! String\n            selectcity = cit as! String\n            selectcounty = areas[areaNum] as! String\n        }\n//        let provinceNum = pickerView.selectedRowInComponent(0)\n//        \n//        let cityNum = pickerView.selectedRowInComponent(1)\n//        \n//        println(\"province:\\(provinces.keys.array[provinceNum]);city:\\(cities[cityNum])\")\n//        dizhi.text = \"\\(provinces.keys.array[provinceNum]) \\(cities[cityNum])\"\n//       println(\"dizhi:\\(dizhi.text)\")\n        \n    }\n    \n\n     func tapped(button:UIButton){\n    \n      if customerName.text == \"\"{\n            let alert = UIAlertView()\n            alert.title = \"\"\n            alert.message = \"请输入姓名\"\n            alert.addButtonWithTitle(\"确定\")\n            alert.show()\n        }else if  phoneNo.text.lengthOfBytesUsingEncoding(NSUTF8StringEncoding) != 11{\n            let alert = UIAlertView()\n            alert.title = \"\"\n            alert.message = \"请输入正确电话号码\"\n            alert.addButtonWithTitle(\"确定\")\n            alert.show()\n            \n      }else if  emailAddress.text == \"\"{\n        let alert = UIAlertView()\n        alert.title = \"\"\n        alert.message = \"请输入邮箱地址\"\n        alert.addButtonWithTitle(\"确定\")\n        alert.show()\n      }else if  dizhi.text == \"\"{\n        let alert = UIAlertView()\n        alert.title = \"\"\n        alert.message = \"请输入所在地\"\n        alert.addButtonWithTitle(\"确定\")\n        alert.show()\n      }else if  contactAddress.text == \"\"{\n        let alert = UIAlertView()\n        alert.title = \"\"\n        alert.message = \"请输入联系地址\"\n        alert.addButtonWithTitle(\"确定\")\n        alert.show()\n      }else{\n    \n        var url: NSURL! = NSURL(string:HttpData.http+\"/NationalService/MobileCustomerInfoAction?operation=_update\")\n            \n            \n            var request:NSMutableURLRequest = NSMutableURLRequest(URL: url, cachePolicy:NSURLRequestCachePolicy.UseProtocolCachePolicy,timeoutInterval: 10)\n            \n            request.HTTPMethod = \"POST\"\n            print(\"gender:\\(Gender)\")\n            var param:String = \"{\\\"customerID\\\":\\\"\\(Info.customerID)\\\",\\\"customerName\\\":\\\"\\(customerName.text)\\\",\\\"customerGender\\\":\\\"\\(customerGender.text)\\\",\\\"customerBirthday\\\":\\\"\\(customerBirthday.text)\\\", \\\"phoneNo\\\":\\\"\\(phoneNo.text)\\\",\\\"mobilePhone\\\":\\\"\\(mobilePhone.text)\\\",\\\"emailAddress\\\":\\\"\\(emailAddress.text)\\\",\\\"customerProvince\\\":\\\"\\(selectprovince)\\\",\\\"customerCity\\\":\\\"\\(selectcity)\\\",\\\"customerCounty\\\":\\\"\\(selectcounty)\\\",\\\"contactAddress\\\":\\\"\\(contactAddress.text)\\\",\\\"qqNumber\\\":\\\"\\(qqNumber.text)\\\",\\\"idCardNo\\\":\\\"\\\",\\\"realLongitude\\\":\\\"\\\",\\\"realLatitude\\\":\\\"\\\",\\\"loginPassword\\\":\\\"\\(Info.loginPassword)\\\",\\\"headPicture\\\":\\\"\\\"}\"\n            //var param:String = \"{\\\"customerID\\\":\\\"Alex\\\",\\\"orderStatus\\\":\\\"预定\\\"}\"\n        print(\"param:\\(param)\")\n            var data:NSData = param.dataUsingEncoding(NSUTF8StringEncoding, allowLossyConversion: true)!\n            request.HTTPBody = data;\n            var response:NSURLResponse?\n            var error:NSError?\n            var receiveData:NSData?\n            do {\n                receiveData = try NSURLConnection.sendSynchronousRequest(request, returningResponse: &response)\n            } catch var error1 as NSError {\n                error = error1\n                receiveData = nil\n            }\n            if (error != nil)\n            {\n                print(error?.code)\n                print(error?.description)\n            }\n            else\n            {\n                var jsonString = NSString(data:receiveData!, encoding: NSUTF8StringEncoding)\n                print(jsonString)\n                \n            }\n            \n            let json:AnyObject? = try? NSJSONSerialization.JSONObjectWithData(receiveData!, options: NSJSONReadingOptions.AllowFragments)\n            var serverResponse: String?\n            serverResponse = json!.objectForKey(\"serverResponse\") as? String\n            \n            \n            \n            \n            \n            if serverResponse == \"Success\" {\n                //self.performSegueWithIdentifier(\"\", sender: self)\n                let alert =  UIAlertView(title: \"修改成功\", message: \"\", delegate: self, cancelButtonTitle: \"确定\")\n                alert.delegate = self\n                alert.show()\n                Info = QueryInfo(customerid) as MyInfo\n                \n            }\n            \n            if serverResponse == \"Failed\"{\n                \n                let alert =  UIAlertView(title: \"修改失败\", message: \"请重试\", delegate: self, cancelButtonTitle: \"确定\")\n                alert.show()\n            }\n            \n        }\n        \n    }\n    \n \n    /// 响应 datePicker 事件\n    func datePickerValueChange(sender: UIDatePicker) {\n        print(\"date select: \\(sender.date)\")\n        customerBirthday.text = \"\\(sender.date)\"\n        \n    }\n    //根据被点击按钮索引，触发事件\n    func alertView(alertView: UIAlertView, clickedButtonAtIndex buttonIndex: Int) {\n        print(\"点击确定\")\n        //就是试试，不用\n    }\n \n    \n    \n    func viewWillAppear(){\n//        customerID.text = Info[0].customerID\n//        customerName.text = Info[0].customerName\n    }\n    \n    \n    \n    func check(){\n        \n        \n        \n    }\n    \n \n    //导航条详情\n    func reply (){\n        self.dismissViewControllerAnimated(true, completion: nil)\n    }\n    \n    func onMakeNavitem() -> UINavigationItem{\n        print(\"创建导航条step1\")\n        //创建一个导航项\n        let navigationItem = UINavigationItem()\n        //创建左边按钮\n        let leftButton =  UIBarButtonItem(barButtonSystemItem: UIBarButtonSystemItem.Reply, target: self, action: \"reply\")\n        //var leftButton =  UIBarButtonItem(title: \"返回\", style: UIBarButtonItemStyle.Bordered, target: self, action: \"reply\")\n        //导航栏的标题\n        navigationItem.title = \"基本资料\"\n        //设置导航栏左边按钮\n        navigationItem.setLeftBarButtonItem(leftButton, animated: true)\n        \n        navigationBar?.pushNavigationItem(navigationItem, animated: true)\n        \n        \n        return navigationItem\n    }\n \n//\n    //从NSUerDefaults 中读取数据\n    func readNSUerDefaults () {\n        \n        let userDefaultes = NSUserDefaults.standardUserDefaults()\n        if  (userDefaultes.stringForKey(\"customerID\")) != nil && (userDefaultes.stringForKey(\"loginPassword\")) != nil{\n            customerid = userDefaultes.stringForKey(\"customerID\")!\n            loginPassword = userDefaultes.stringForKey(\"loginPassword\")!\n            \n        }\n        \n    }\n    \n\n    \n    \n    func touchScrollView(sender: UITapGestureRecognizer){\n        print",
 }
]

[
 {
  "file": "/Users/zhang/Desktop/HouseKeeping 2/SHW/FacilitatorInfo.swift",
  "offset": 2385,
  "remove": 16866,
  "text": "let url: NSURL! = NSURL(string: HttpData.http+\"/FamilyServiceSystem/MobileFacilitatorInfoAction?operation=_byServiceType\")\n    \n    print(\"更新商家信息\")\n    \n    let request:NSMutableURLRequest = NSMutableURLRequest(URL:url, cachePolicy:NSURLRequestCachePolicy.UseProtocolCachePolicy,timeoutInterval: 10)\n    \n    request.HTTPMethod = \"POST\"\n    //var param:String = \"{\\\"customerAccount\\\":\\\"Alex\\\",\\\"Password\\\":\\\"a123\\\"}\"\n    let param:String = \"{\\\"type\\\":\\\"\\(secondType)\\\",\\\"attributeName\\\":\\\"\\(attributeName)\\\",\\\"upDown\\\":\\\"\\(upDown)\\\",\\\"facilitatorCounty\\\":\\\"\\(facilitatorCounty)\\\"}\"\n    let data:NSData = param.dataUsingEncoding(NSUTF8StringEncoding, allowLossyConversion: true)!\n    request.HTTPBody = data;\n    var response:NSURLResponse?\n    var error:NSError?\n    var receiveData:NSData?\n    do {\n        receiveData = try NSURLConnection.sendSynchronousRequest(request, returningResponse: &response)\n    } catch let error1 as NSError {\n        error = error1\n        receiveData = nil\n    }\n    if (error != nil)\n    {\n        print(error?.code)\n        print(error?.description)\n    }\n    else\n    {\n        let jsonString = NSString(data:receiveData!, encoding: NSUTF8StringEncoding)\n        print(jsonString)\n        \n    }\n    \n    let json:AnyObject! = try? NSJSONSerialization.JSONObjectWithData(receiveData!, options: NSJSONReadingOptions.AllowFragments)\n    //var finishinfo = finishinfo()\n    //var FinishData:[finishinfo] = []\n    let test1: AnyObject?=json.objectForKey(\"serverResponse\")\n    let serverResponse:String = test1 as! String \n    \n    var FacilitatorData:[facilitatorInfo] = []\n    if  serverResponse == \"Success\" {\n    let test2: AnyObject?=json.objectForKey(\"data\")\n    print(test2)\n    let jsonArray = test2 as? NSArray\n    var count = jsonArray?.count\n   \n    for value in jsonArray!{\n        let id:Int=value.objectForKey(\"id\") as! Int\n        let facilitatorName:String=value.objectForKey(\"facilitatorName\") as! String\n        //var companyName:String=value.objectForKey(\"companyName\") as! String\n        let facilitatorID:String=value.objectForKey(\"facilitatorID\") as! String\n        let officePhone:String=value.objectForKey(\"officePhone\") as! String\n        \n        \n        \n        let qqNumber:String=value.objectForKey(\"qqNumber\") as! String\n        let contactPhone:String=value.objectForKey(\"contactPhone\") as! String\n        let facilitatorProvince:String=value.objectForKey(\"facilitatorProvince\") as! String\n        let facilitatorCity:String=value.objectForKey(\"facilitatorCity\") as! String\n        let facilitatorCounty:String=value.objectForKey(\"facilitatorCounty\") as! String\n        \n        \n        let emailAddress:String=value.objectForKey(\"emailAddress\") as! String\n        let contactAddress:String=value.objectForKey(\"contactAddress\") as! String\n        let registerTime:String=value.objectForKey(\"registerTime\") as! String\n        let facilitatorLevel:Int=value.objectForKey(\"facilitatorLevel\") as! Int\n        let creditScore:String = value.objectForKey(\"creditScore\") as! String\n        \n        \n        \n        let facilitatorIntro:String=value.objectForKey(\"facilitatorIntro\") as! String\n        let facilitatorLogo:String=value.objectForKey(\"facilitatorLogo\") as! String\n        let facilitatorStatus:String=value.objectForKey(\"facilitatorStatus\") as! String\n        \n        let serviceCount:Int=value.objectForKey(\"serviceCount\") as! Int\n        var serviceType:String = value.objectForKey(\"serviceTypeArray\") as! String\n        let obj:facilitatorInfo = facilitatorInfo(id:id,facilitatorName:facilitatorName,facilitatorID:facilitatorID,officePhone:officePhone,qqNumber:qqNumber,contactPhone:contactPhone,facilitatorProvince:facilitatorProvince,facilitatorCity:facilitatorCity,facilitatorCounty:facilitatorCounty,emailAddress:emailAddress,contactAddress:contactAddress,registerTime: registerTime,facilitatorLevel:facilitatorLevel,creditScore:creditScore,\n            facilitatorIntro: facilitatorIntro,facilitatorLogo:facilitatorLogo,facilitatorStatus:facilitatorStatus,serviceCount: serviceCount)\n        //println(obj.facilitatorID+\" \"+obj.facilitatorName);\n        //        var FinishiData:[Finishinfo] = []\n        FacilitatorData += [obj]\n        // obj.confirmTime = a;\n        //        var b: AnyObject?=value.objectForKey(\"customerEvaluate\")\n        //        finishinfo.customerEvaluate = b\n        //        var c: AnyObject?=value.objectForKey(\"customerName\")\n        //        finishinfo.customerName = c\n        \n       }\n    }\n    return FacilitatorData\n    \n}\n//商家详情\n func refreshFDetail (facilitatorID:String)->facilitatorInfo{\n    let url: NSURL! = NSURL(string: HttpData.http+\"/FamilyServiceSystem/MobileFacilitatorInfoAction?operation=_detailQuery\")\n    print(\"查询指定facilitatorID商家\")\n    \n    let request:NSMutableURLRequest = NSMutableURLRequest(URL:url, cachePolicy:NSURLRequestCachePolicy.UseProtocolCachePolicy,timeoutInterval: 10)\n    \n    request.HTTPMethod = \"POST\"\n    //var param:String = \"{\\\"customerAccount\\\":\\\"Alex\\\",\\\"Password\\\":\\\"a123\\\"}\"\n    let param:String = \"{\\\"facilitatorID\\\":\\\"\\(facilitatorID)\\\"}\"\n    let data:NSData = param.dataUsingEncoding(NSUTF8StringEncoding, allowLossyConversion: true)!\n    request.HTTPBody = data;\n    var response:NSURLResponse?\n    var error:NSError?\n    var receiveData:NSData?\n    do {\n        receiveData = try NSURLConnection.sendSynchronousRequest(request, returningResponse: &response)\n    } catch let error1 as NSError {\n        error = error1\n        receiveData = nil\n    }\n    if (error != nil)\n    {\n        print(error?.code)\n        print(error?.description)\n    }\n    else\n    {\n        var jsonString = NSString(data:receiveData!, encoding: NSUTF8StringEncoding)\n//        println(jsonString)\n        \n    }\n    \n    let json:AnyObject! = try? NSJSONSerialization.JSONObjectWithData(receiveData!, options: NSJSONReadingOptions.AllowFragments)\n \n    var detailData:facilitatorInfo?\n    let test1: AnyObject?=json.objectForKey(\"serverResponse\")\n    \n    let serverResponse:String = test1 as! String\n    \n \n    if  serverResponse == \"Success\" {\n    let basic: AnyObject?=json.objectForKey(\"basic\")\n    let id:Int=basic!.objectForKey(\"id\") as! Int\n    let facilitatorName1:String=basic!.objectForKey(\"facilitatorName\") as! String\n    //var companyName1:String=basic!.objectForKey(\"companyName\") as! String\n    let facilitatorID1:String=basic!.objectForKey(\"facilitatorID\") as! String\n    let officePhone1:String=basic!.objectForKey(\"officePhone\") as! String\n    \n    \n    \n    let qqNumber1:String=basic!.objectForKey(\"qqNumber\") as! String\n    let contactPhone1:String=basic!.objectForKey(\"contactPhone\") as! String\n    let facilitatorProvince1:String=basic!.objectForKey(\"facilitatorProvince\") as! String\n    let facilitatorCity1:String=basic!.objectForKey(\"facilitatorCity\") as! String\n    let facilitatorCounty1:String=basic!.objectForKey(\"facilitatorCounty\") as! String\n    \n    \n    let emailAddress1:String=basic!.objectForKey(\"emailAddress\") as! String\n    let contactAddress1:String=basic!.objectForKey(\"contactAddress\") as! String\n    let registerTime1:String=basic!.objectForKey(\"registerTime\") as! String\n    let facilitatorLevel1:Int=basic!.objectForKey(\"facilitatorLevel\") as! Int\n    let creditScore1:String = basic!.objectForKey(\"creditScore\") as! String\n    \n    \n    \n    let facilitatorIntro1:String=basic!.objectForKey(\"facilitatorIntro\") as! String\n    let facilitatorLogo1:String=basic!.objectForKey(\"facilitatorLogo\") as! String\n    let facilitatorStatus1:String=basic!.objectForKey(\"facilitatorStatus\") as! String\n    \n    let serviceCount1:Int=basic!.objectForKey(\"serviceCount\") as! Int\n    \n    let obj:facilitatorInfo = facilitatorInfo(id:id,facilitatorName:facilitatorName1,facilitatorID:facilitatorID1,officePhone:officePhone1,qqNumber:qqNumber1,contactPhone:contactPhone1,facilitatorProvince:facilitatorProvince1,facilitatorCity:facilitatorCity1,facilitatorCounty:facilitatorCounty1,emailAddress:emailAddress1,contactAddress:contactAddress1,registerTime: registerTime1,facilitatorLevel:facilitatorLevel1,creditScore:creditScore1,\n        facilitatorIntro: facilitatorIntro1,facilitatorLogo:facilitatorLogo1,facilitatorStatus:facilitatorStatus1,serviceCount: serviceCount1)\n    \n      detailData = obj\n    }\n    \n    return detailData!\n    \n}\n //是否被收藏\n func GetCollect (facilitatorID:String,customerID:String)->String{\n    let url: NSURL! = NSURL(string: HttpData.http+\"/FamilyServiceSystem/MobileFacilitatorInfoAction?operation=_detailQuery\")\n    print(\"是否被收藏\")\n    \n    let request:NSMutableURLRequest = NSMutableURLRequest(URL:url, cachePolicy:NSURLRequestCachePolicy.UseProtocolCachePolicy,timeoutInterval: 10)\n    \n    request.HTTPMethod = \"POST\"\n    //var param:String = \"{\\\"customerAccount\\\":\\\"Alex\\\",\\\"Password\\\":\\\"a123\\\"}\"\n    let param:String = \"{\\\"facilitatorID\\\":\\\"\\(facilitatorID)\\\",\\\"customerID\\\":\\\"\\(customerID)\\\"}\"\n    let data:NSData = param.dataUsingEncoding(NSUTF8StringEncoding, allowLossyConversion: true)!\n    request.HTTPBody = data;\n    var response:NSURLResponse?\n    var error:NSError?\n    var receiveData:NSData?\n    do {\n        receiveData = try NSURLConnection.sendSynchronousRequest(request, returningResponse: &response)\n    } catch let error1 as NSError {\n        error = error1\n        receiveData = nil\n    }\n    if (error != nil)\n    {\n        print(error?.code)\n        print(error?.description)\n    }\n    else\n    {\n        var jsonString = NSString(data:receiveData!, encoding: NSUTF8StringEncoding)\n//        println(jsonString)\n        \n    }\n    \n    let json:AnyObject! = try? NSJSONSerialization.JSONObjectWithData(receiveData!, options: NSJSONReadingOptions.AllowFragments)\n    let collect: AnyObject?=json.objectForKey(\"isCollected\")\n//    println(collect)\n    let isCollected :String = collect as! String\n    \n    return isCollected\n  }\n \n \n \n \n//添加收藏时的函数\nfunc addCollection(n:String) ->String  {\n    //要改URL\n    \n    let url: NSURL! = NSURL(string: HttpData.http+\"/FamilyServiceSystem/MobileFacilitatorCollectionAction?operation=_add\")\n    \n    let request:NSMutableURLRequest = NSMutableURLRequest(URL:url, cachePolicy:NSURLRequestCachePolicy.UseProtocolCachePolicy,timeoutInterval: 10)\n    \n    request.HTTPMethod = \"POST\"\n    //要改参数类型\n    let param:String = \"{\\\"typeName\\\":\\\"\\(n)\\\"}\"\n    //println(\"typeName\\(select)\")\n    let data:NSData = param.dataUsingEncoding(NSUTF8StringEncoding, allowLossyConversion: true)!\n    request.HTTPBody = data;\n    var response:NSURLResponse?\n    var error:NSError?\n    var receiveData:NSData?\n    do {\n        receiveData = try NSURLConnection.sendSynchronousRequest(request, returningResponse: &response)\n    } catch let error1 as NSError {\n        error = error1\n        receiveData = nil\n    }\n    if (error != nil)\n    {\n        print(error?.code)\n        print(error?.description)\n    }\n    else\n    {\n        let jsonString = NSString(data:receiveData!, encoding: NSUTF8StringEncoding)\n        print(jsonString)\n        \n    }\n    \n    let json:AnyObject! = try? NSJSONSerialization.JSONObjectWithData(receiveData!, options: NSJSONReadingOptions.AllowFragments)\n    \n    \n    let serviceresponse: AnyObject?=json.objectForKey(\"serverResponse\")\n    let Response :String = serviceresponse as! String\n\n\n    return Response\n}\n //取消收藏时的函数\n /*func deleteCollection(select:String) ->String  {\n    //要改URL\n    var url: NSURL! = NSURL(string: HttpData.http+\"/FamilyServiceSystem/MobileFacilitatorCollectionAction?operation=_add\")\n    \n    var request:NSMutableURLRequest = NSMutableURLRequest(URL:url, cachePolicy:NSURLRequestCachePolicy.UseProtocolCachePolicy,timeoutInterval: 10)\n    \n    request.HTTPMethod = \"POST\"\n    //要改参数类型\n    //var param:String = \"{\\\"customerID\\\":\\\"\\(customerid)\\\",\\\"facilitatorID\\\":\\\"\\(detailItem.facilitatorID)\\\",\\\"facilitatorName\\\":\\\"\\(detailItem.facilitatorName)\\\"}\"\n    \n    var data:NSData = param.dataUsingEncoding(NSUTF8StringEncoding, allowLossyConversion: true)!\n    request.HTTPBody = data;\n    var response:NSURLResponse?\n    var error:NSError?\n    var receiveData:NSData? = NSURLConnection.sendSynchronousRequest(request, returningResponse: &response, error: &error)\n    if (error != nil)\n    {\n        println(error?.code)\n        println(error?.description)\n    }\n    else\n    {\n        var jsonString = NSString(data:receiveData!, encoding: NSUTF8StringEncoding)\n        println(jsonString)\n        \n    }\n    \n    let json:AnyObject! = NSJSONSerialization.JSONObjectWithData(receiveData!, options: NSJSONReadingOptions.AllowFragments, error: nil)\n\n    \n    \n    var serviceresponse: AnyObject?=json.objectForKey(\"serverResponse\")\n    var Response :String = serviceresponse as! String\n    \n    \n    return Response\n }*/\n \n// \n// class CountyInfo:NSObject {\n//    var id :Int\n//    var cityCode:String\n//    var cityName:String\n//    var countyName:String\n//    var isCovered:String\n//        init( id:Int,cityCode:String,cityName:String,countyName:String,isCovered:String){\n//            self.id = id\n//            self.cityCode = cityCode\n//            self.cityName = cityName\n//            self.countyName = countyName\n//            self.isCovered = isCovered\n//            super.init()\n//    }\n//    \n// }\n\n func queryCounty(cityName:String) ->NSArray  {\n    //要改URL\n    \n    let url: NSURL! = NSURL(string: HttpData.http+\"/NationalService/MobileCountyInfoAction?operation=_querycoveredCounty\")\n    print(url)\n    let request:NSMutableURLRequest = NSMutableURLRequest(URL:url, cachePolicy:NSURLRequestCachePolicy.UseProtocolCachePolicy,timeoutInterval: 10)\n    \n    request.HTTPMethod = \"POST\"\n    //要改参数类型\n    let param:String = \"{\\\"cityName\\\":\\\"\\(cityName)\\\"}\"\n    print(\"城市:\\(cityName)\")\n    let data:NSData = param.dataUsingEncoding(NSUTF8StringEncoding, allowLossyConversion: true)!\n    request.HTTPBody = data;\n    var response:NSURLResponse?\n    var error:NSError?\n    var receiveData:NSData?\n    do {\n        receiveData = try NSURLConnection.sendSynchronousRequest(request, returningResponse: &response)\n    } catch let error1 as NSError {\n        error = error1\n        receiveData = nil\n    }\n    if (error != nil)\n    {\n        print(error?.code)\n        print(error?.description)\n    }\n    else\n    {\n        let jsonString = NSString(data:receiveData!, encoding: NSUTF8StringEncoding)\n        print(jsonString)\n        \n    }\n    \n    let json:AnyObject! = try? NSJSONSerialization.JSONObjectWithData(receiveData!, options: NSJSONReadingOptions.AllowFragments)\n    \n    //var detailData:CountyInfo!\n    let test1: AnyObject?=json.objectForKey(\"serverResponse\")\n    let serverResponse:String = test1 as! String\n    \n    var countyData:[String] = []\n    if  serverResponse == \"Success\" {\n    let test2: AnyObject?=json.objectForKey(\"data\")\n    print(\"test2:\\(test2)\")\n    let jsonArray = test2 as? NSArray\n    let count = jsonArray?.count\n     print(\"jsonArray:\\(jsonArray)\")\n     print(\"count:\\(count)\")\n        \n        \n    for value in jsonArray!{\n        \n//          var id:Int=value.objectForKey(\"id\") as! Int\n//          println(\"id\")\n//        \n//          println(\"zenemhuishi\")\n//        var cityCode:String=basic!.objectForKey(\"cityCode\") as! String\n//        println(\"cityCode\\(cityCode)\")\n//        var cityName:String=basic!.objectForKey(\"cityName\") as! String\n//        println(\"cityName\\(cityName)\")\n       let countyName:String=value.objectForKey(\"countyName\") as! String\n//        var isCovered:String=basic!.objectForKey(\"isCovered\") as! String\n//        println(\"countyName:\\(countyName)\")\n//        \n//        let obj:CountyInfo = CountyInfo(id:id,cityCode:cityCode,cityName:cityName,countyName:countyName,isCovered:isCovered)\n//        detailData = obj\n          \n   \n            countyData += [countyName]\n            \n        }\n    }\n    return countyData\n        \n }\n \n \n \n //实时更新客户位置（A）\n func RefreshLocation (customerID:String,realLongitude:String,realLatitude:String)->String{\n    let url: NSURL! = NSURL(string:HttpData.http+\"/NationalService/MobileCustomerInfoAction?operation=_updateLocation\")\n    \n    \n    let request:NSMutableURLRequest = NSMutableURLRequest(URL: url, cachePolicy:NSURLRequestCachePolicy.UseProtocolCachePolicy,timeoutInterval: 10)\n    \n    request.HTTPMethod = \"POST\"\n    \n    let param:String = \"{\\\"customerID\\\":\\\"\\(customerID)\\\",\\\"realLongitude\\\":\\\"\\(realLongitude)\\\",\\\"realLatitude\\\":\\\"\\(realLatitude)\\\"}\"\n    \n    print(\"param\")\n    print(param)\n    \n    let data:NSData = param.dataUsingEncoding(NSUTF8StringEncoding, allowLossyConversion: true)!\n    request.HTTPBody = data;\n    var response:NSURLResponse?\n    var error:NSError?\n    var receiveData:NSData?\n    do {\n        receiveData = try NSURLConnection.sendSynchronousRequest(request, returningResponse: &response)\n    } catch let error1 as NSError {\n        error = error1\n        receiveData = nil\n    }\n    if (error != nil)\n    {\n        print(error?.code)\n        print(error?.description)\n    }\n    else\n    {\n        let jsonString = NSString(data:receiveData!, encoding: NSUTF8StringEncoding)\n        print(jsonString)\n        \n    }\n    \n    let json:AnyObject? = try? NSJSONSerialization.JSONObjectWithData(receiveData!, options: NSJSONReadingOptions.AllowFragments)\n    //        var dic = dict as! NSDictionary\n    print",
 }
]

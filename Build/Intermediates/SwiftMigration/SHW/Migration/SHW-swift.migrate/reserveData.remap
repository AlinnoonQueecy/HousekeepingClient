[
 {
  "file": "/Users/zhang/Desktop/HouseKeeping 2/SHW/reserveData.swift",
  "offset": 2154,
  "remove": 5027,
  "text": "let url: NSURL! = NSURL(string: HttpData.http+\"/NationalService/MobileServiceDeclareAction?operation=_queryDeclares\")\n    \n    let request:NSMutableURLRequest = NSMutableURLRequest(URL:url, cachePolicy:NSURLRequestCachePolicy.UseProtocolCachePolicy,timeoutInterval: 10)\n    \n    request.HTTPMethod = \"POST\"\n    //var param:String = \"{\\\"customerAccount\\\":\\\"Alex\\\",\\\"Password\\\":\\\"a123\\\"}\"\n    let param:String = \"{\\\"customerID\\\":\\\"\\(customerID)\\\",\\\"isAccepted\\\":\\\"\\(isAccepted)\\\"}\"\n    print(\"param:\\(param)\")\n    let data:NSData = param.dataUsingEncoding(NSUTF8StringEncoding, allowLossyConversion: true)!\n    request.HTTPBody = data;\n    var response:NSURLResponse?\n    var error:NSError?\n    var receiveData:NSData?\n    do {\n        receiveData = try NSURLConnection.sendSynchronousRequest(request, returningResponse: &response)\n    } catch let error1 as NSError {\n        error = error1\n        receiveData = nil\n    }\n    if (error != nil)\n    {\n        print(error?.code)\n        print(error?.description)\n    }\n    else\n    {\n        let jsonString = NSString(data:receiveData!, encoding: NSUTF8StringEncoding)\n        print(jsonString)\n        \n    }\n    \n    let json:AnyObject! = try? NSJSONSerialization.JSONObjectWithData(receiveData!, options: NSJSONReadingOptions.AllowFragments)\n    \n    \n    var DeclaresData:[DeclaresInfo] = []\n    let test1: AnyObject?=json.objectForKey(\"serverResponse\")\n    let  response1 :String = test1 as! String\n    if  response1 == \"Success\"{\n        let test2: AnyObject?=json.objectForKey(\"data\")\n        let jsonArray = test2 as? NSArray\n        var count = jsonArray?.count\n        \n        for value in jsonArray!{\n            \n             let id:Int=value.objectForKey(\"id\") as! Int\n            let servantID:String=value.objectForKey(\"servantID\") as! String\n            let servantName:String=value.objectForKey(\"servantName\")\n                as! String\n            let customerID:String=value.objectForKey(\"customerID\") as! String\n            let customerName:String=value.objectForKey(\"customerName\") as! String\n            \n            \n            let phoneNo:String=value.objectForKey(\"phoneNo\") as! String\n            let declareTime:String=value.objectForKey(\"declareTime\") as! String\n            let serviceTime:String=value.objectForKey(\"serviceTime\") as! String\n            let serviceProvince:String=value.objectForKey(\"serviceProvince\") as! String\n            let serviceCity:String=value.objectForKey(\"serviceCity\") as! String\n            \n            \n            let serviceCounty:String=value.objectForKey(\"serviceCounty\") as! String\n            let serviceAddress:String=value.objectForKey(\"serviceAddress\") as! String\n            let serviceLongitude:String=value.objectForKey(\"serviceLongitude\") as! String\n            let serviceLatitude:String=value.objectForKey(\"serviceLatitude\") as! String\n            let salary:Double=value.objectForKey(\"salary\") as! Double\n            \n            \n            let serviceType:String=value.objectForKey(\"serviceType\") as! String\n            let remarks:String=value.objectForKey(\"remarks\") as! String\n            let isAccepted:Int=value.objectForKey(\"isAccepted\") as! Int\n            let orderNo:String=value.objectForKey(\"orderNo\") as! String\n         \n            \n            let obj:DeclaresInfo=DeclaresInfo(id:id,customerID:customerID,customerName:customerName,servantID:servantID,servantName:servantName,phoneNo:phoneNo,declareTime:declareTime,serviceTime:serviceTime,serviceProvince:serviceProvince,serviceCity:serviceCity,serviceCounty:serviceCounty,serviceAddress:serviceAddress,serviceLongitude:serviceLongitude,serviceLatitude:serviceLatitude,salary:salary,serviceType:serviceType,remarks:remarks,isAccepted:isAccepted,orderNo:orderNo)\n            \n            DeclaresData += [obj]\n           \n        }\n    }\n    return DeclaresData\n    \n}\n\n\n//取消发布的需求的函数（A）\nfunc deleteDeclare(id:Int) ->String  {\n    //要改URL\n    let url: NSURL! = NSURL(string: HttpData.http+\"/NationalService/MobileServiceDeclareAction?operation=_cancle\")\n    \n    let request:NSMutableURLRequest = NSMutableURLRequest(URL:url, cachePolicy:NSURLRequestCachePolicy.UseProtocolCachePolicy,timeoutInterval: 10)\n    \n    request.HTTPMethod = \"POST\"\n    //要改参数类型\n    let param:String = \"{\\\"id\\\":\\\"\\(id)\\\"}\"\n    \n    let data:NSData = param.dataUsingEncoding(NSUTF8StringEncoding, allowLossyConversion: true)!\n    request.HTTPBody = data;\n    var response:NSURLResponse?\n    var error:NSError?\n    var receiveData:NSData?\n    do {\n        receiveData = try NSURLConnection.sendSynchronousRequest(request, returningResponse: &response)\n    } catch let error1 as NSError {\n        error = error1\n        receiveData = nil\n    }\n    if (error != nil)\n    {\n        print(error?.code)\n        print(error?.description)\n    }\n    else\n    {\n        let jsonString = NSString(data:receiveData!, encoding: NSUTF8StringEncoding)\n        print(jsonString)\n        \n    }\n    \n    let json:AnyObject! = try? NSJSONSerialization.JSONObjectWithData(receiveData!, options: NSJSONReadingOptions.AllowFragments)\n    \n    \n    \n    let serviceresponse: AnyObject?=json.objectForKey(\"serverResponse\")\n    let",
 }
]

[
 {
  "file": "/Users/zhang/Desktop/HouseKeeping 2/SHW/PayVC.swift",
  "offset": 972,
  "remove": 8588,
  "text": "let width = self.view.frame.width\n        var height = self.view.frame.height\n        let labelW = self.view.frame.width - 20\n        \n//        var payinfo:PayInfo;\n   //     AlipayMethod.pay(Payinfo)\n        //实例化导航条\n        navigationBar = UINavigationBar(frame: CGRectMake(0, 0, width, 64))\n        self.view.addSubview(navigationBar!)\n        print(\"创建导航条详情\")\n        onMakeNavitem()\n        \n//        //添加scrollview\n//        var scrollView = UIScrollView()\n//        //scrollView.bounds = self.view.bounds\n//        scrollView.frame = CGRectMake(0, 64,width,height)\n//        scrollView.contentSize=CGSizeMake(width,height*5)\n//        //scrollView.contentInset = UIEdgeInsetsMake(-64,0,0, 0)\n//        //不可翻页\n//        scrollView.pagingEnabled = false\n//        //不显示横向滑竿\n//        scrollView.showsHorizontalScrollIndicator = false\n//        //不显示纵向滑竿\n//        scrollView.showsVerticalScrollIndicator = false\n//        //设置不可下拉\n//        scrollView.bounces = false\n//        scrollView.scrollsToTop = false\n//        self.view.addSubview(scrollView)\n        \n        //订单信息\n        let orderY = CGFloat(70)\n        let order = UIButton(frame: CGRectMake(15, orderY, width-30, 30))\n        order.setTitle(\"支付信息\", forState: UIControlState.Normal)\n        order.setTitleColor(UIColor.orangeColor(), forState: UIControlState.Normal)\n        order.contentHorizontalAlignment = UIControlContentHorizontalAlignment.Left\n        order.setBackgroundImage(UIImage(named: \"listBackground\"), forState: UIControlState.Normal)\n        order.titleLabel?.font = UIFont.systemFontOfSize(17)\n        self.view.addSubview(order)\n        \n        let facilitatorID = UILabel(frame: CGRectMake(15, orderY+35, labelW, 25))\n        facilitatorID.text = \"订单编号:\\(PayData!.orderNo)\"\n        facilitatorID.textColor = UIColor.blackColor()\n        facilitatorID.font = UIFont.systemFontOfSize(15)\n        self.view.addSubview(facilitatorID)\n        \n        let servantName1 = UILabel(frame: CGRectMake(15, orderY+35+25, labelW, 25))\n        servantName1.text = \"支付金额:\\(PayData.servicePrice)元\"\n        servantName1.textColor = UIColor.blackColor()\n        servantName1.font = UIFont.systemFontOfSize(15)\n        self.view.addSubview(servantName1)\n        \n        //服务项目\n        let itemName = UILabel(frame: CGRectMake(15, orderY+35+2*25, labelW, 25))\n        itemName.text = \"人员名称:\\(PayData.servantName)\"\n        itemName.textColor = UIColor.blackColor()\n        itemName.font = UIFont.systemFontOfSize(15)\n        self.view.addSubview(itemName)\n        \n        let customerInfoY  =  orderY+35+3*25+20\n        let customerName = UILabel(frame: CGRectMake(15, customerInfoY, labelW, 25))\n        customerName.text = \"订单内容:\\(PayData.serviceContent)\"\n        customerName.textColor = UIColor.blackColor()\n        customerName.font = UIFont.systemFontOfSize(15)\n        self.view.addSubview(customerName)\n        \n        //预定按钮\n       // var CBY = customerInfoY+115+30\n         let CBY = self.view.frame.height-70\n        yuyue = UIButton(frame:CGRectMake(width/2-125, CBY,250,30))\n        yuyue! .setTitle(\"确认支付\", forState:UIControlState.Normal)\n        yuyue!.setTitleColor(UIColor.whiteColor(), forState: UIControlState.Normal)\n        yuyue!.titleLabel?.font = UIFont.systemFontOfSize(15)\n        yuyue!.contentHorizontalAlignment = UIControlContentHorizontalAlignment.Center\n        yuyue!.showsTouchWhenHighlighted = true\n        yuyue?.layer.cornerRadius = 5\n        yuyue!.backgroundColor = UIColor.orangeColor()\n        self.view.addSubview(yuyue!)\n        yuyue!.addTarget(self , action:Selector(\"yuding:\"), forControlEvents: UIControlEvents.TouchUpInside)\n        \n//        \n//        scrollView.contentSize = CGSizeMake(width,64+CBY+30+253)\n//        println(scrollView.bounds.height)\n        \n        // Do any additional setup after loading the view.\n    }\n    \n    override func didReceiveMemoryWarning() {\n        super.didReceiveMemoryWarning()\n        // Dispose of any resources that can be recreated.\n    }\n    //支付的函数\n    func yuding(yuyue:UIButton){\n        \n        let payid:String = PayData.orderNo as String\n        let payname:String  = PayData.servantName as String\n        let paycontent:String = PayData.serviceContent as String\n        let payprice:Float = PayData.servicePrice as Float\n        print(\"Payinfo\\(payinfo.payID)\")\n         print(payid)\n         payinfo.payID  =  payid\n         payinfo.payName = payname\n         payinfo.payBody = paycontent\n         payinfo.payPrice = payprice\n          print(\"Payinfo.payID\\(payinfo.payID)\")\n         AlipayMethod.pay(payinfo)\n//        let alert =  UIAlertView(title: \"\", message: \"请刷新列表\", delegate: self, cancelButtonTitle: \"确定\")\n//        alert.show()\n     }\n    \n    func  alertView(alertView: UIAlertView, clickedButtonAtIndex buttonIndex: Int) {\n        let sb = UIStoryboard(name: \"Main\", bundle: nil)\n        let vc = sb.instantiateViewControllerWithIdentifier(\"reserve\") \n        self.presentViewController(vc, animated: true, completion: nil)\n        \n    }\n    \n    \n    \n    func getres(){\n        let url: NSURL! = NSURL(string:HttpData.http+\"/FamilyServiceSystem/MobileServiceOrderAction?operation =_queryOrderByid\")\n        \n        \n        let request:NSMutableURLRequest = NSMutableURLRequest(URL: url, cachePolicy:NSURLRequestCachePolicy.UseProtocolCachePolicy,timeoutInterval: 10)\n        \n        request.HTTPMethod = \"POST\"\n        \n        let param:String = \"{\\\"id\\\":\\\"\\(PayData.id)\\\" }\"\n        print(\"param\")\n        print(param)\n        \n        let data:NSData = param.dataUsingEncoding(NSUTF8StringEncoding, allowLossyConversion: true)!\n        request.HTTPBody = data;\n        var response:NSURLResponse?\n        var error:NSError?\n        var receiveData:NSData?\n        do {\n            receiveData = try NSURLConnection.sendSynchronousRequest(request, returningResponse: &response)\n        } catch let error1 as NSError {\n            error = error1\n            receiveData = nil\n        }\n        if (error != nil)\n        {\n            print(error?.code)\n            print(error?.description)\n        }\n        else\n        {\n            let jsonString = NSString(data:receiveData!, encoding: NSUTF8StringEncoding)\n            print(jsonString)\n            \n        }\n        \n        let json:AnyObject? = try? NSJSONSerialization.JSONObjectWithData(receiveData!, options: NSJSONReadingOptions.AllowFragments)\n        //        var dic = dict as! NSDictionary\n        print(json)\n        let serverResponse = json!.objectForKey(\"serverResponse\") as? String\n        let value: AnyObject?=json!.objectForKey(\"data\")\n        \n        \n        if serverResponse == \"Success\"{\n            \n            //            let alert =  UIAlertView(title: \"预定成功\", message: \"商家会尽快与您取得联系!\", delegate: self, cancelButtonTitle: \"确定\")\n            //            alert.show()\n            //\n            //\n            //        }else if serverResponse == \"Failed\"{\n            //\n            //            let alert =  UIAlertView(title: \"预定失败\", message: \"请重试\", delegate: self, cancelButtonTitle: \"确定\")\n            //            alert.show()\n            //\n            //        }\n            let status :String = value!.objectForKey(\"orderStatus\") as! String\n            if  status == \"付款完成\" {\n                let alert =  UIAlertView(title: \"\", message: \"请刷新列表\", delegate: self, cancelButtonTitle: \"确定\")\n                alert.show()\n            }\n        }\n\n    }\n    //导航条详情\n    func reply (){\n        self.dismissViewControllerAnimated(true, completion: nil)\n    }\n    \n    func onMakeNavitem() -> UINavigationItem{\n        print(\"创建导航条step1\")\n        //创建一个导航项\n        let navigationItem = UINavigationItem()\n        //创建左边按钮\n        let leftButton =  UIBarButtonItem(barButtonSystemItem: UIBarButtonSystemItem.Reply, target: self, action: \"reply\")\n        //var leftButton =  UIBarButtonItem(title: \"返回\", style: UIBarButtonItemStyle.Bordered, target: self, action: \"reply\")\n        //导航栏的标题\n        navigationItem.title = \"支付详情\"\n        //设置导航栏左边按钮\n        navigationItem.setLeftBarButtonItem(leftButton, animated: true)\n        \n        navigationBar?.pushNavigationItem(navigationItem, animated: true)\n        \n        \n        return navigationItem\n    }\n    //从NSUerDefaults 中读取数据\n    func readNSUerDefaults () {\n        \n        let",
 }
]

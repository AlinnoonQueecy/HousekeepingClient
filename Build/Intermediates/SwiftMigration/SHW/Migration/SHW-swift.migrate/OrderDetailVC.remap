[
 {
  "file": "/Users/zhang/Desktop/HouseKeeping 2/SHW/OrderDetailVC.swift",
  "offset": 2507,
  "remove": 21573,
  "text": "(\"OrderdetailVC\")\n        //读取用户信息，如果不是第一次登录，则会自动登录\n        readNSUerDefaults()\n        //初始化数据\n        myinfo = QueryInfo(customerid) as MyInfo\n         width = self.view.frame.width\n        let height = self.view.frame.height\n        let labelW = self.view.frame.width - 20\n       \n        \n        \n        \n        //实例化导航条\n        navigationBar = UINavigationBar(frame: CGRectMake(0, 0, width, 64))\n        self.view.addSubview(navigationBar!)\n        print(\"创建导航条详情\")\n        onMakeNavitem()\n        \n        \n        scrollView.delegate = self\n        // 地理编码器初始化\n        geocodeSearch = BMKGeoCodeSearch()\n        \n        \n        //1、创建手势实例，并连接方法UITapGestureRecognizer,点击手势\n        let recognizer =  UITapGestureRecognizer(target:self, action:\"touchScrollView:\")\n        print(\"touchScrollView\")\n        \n           //设置手势点击数,点1下\n        recognizer.numberOfTapsRequired = 1\n        \n        //recognizer.numberOfTouchesRequired = 1\n        \n        scrollView.addGestureRecognizer(recognizer)\n        NSNotificationCenter.defaultCenter().addObserver(self,selector:Selector(\"keyboardWillShow:\"),name:UIKeyboardWillShowNotification,object:nil)\n        NSNotificationCenter.defaultCenter().addObserver(self,selector:Selector(\"keyboardWillHide:\"),name:UIKeyboardWillHideNotification,object:nil)\n        //添加scrollview\n//        var scrollView = UIScrollView()\n        //scrollView.bounds = self.view.bounds\n        scrollView.frame = CGRectMake(0,64,width,height)\n        scrollView.contentSize=CGSizeMake(width,height*5)\n        //scrollView.contentInset = UIEdgeInsetsMake(-64,0,0, 0)\n        //不可翻页\n        scrollView.pagingEnabled = false\n        //不显示横向滑竿\n        scrollView.showsHorizontalScrollIndicator = false\n        //不显示纵向滑竿\n        scrollView.showsVerticalScrollIndicator = false\n        //设置不可下拉\n        scrollView.bounces = false\n        scrollView.scrollsToTop = false\n        self.view.addSubview(scrollView)\n        \n        //订单信息\n        let orderY = CGFloat(0)\n        let order = UIButton(frame: CGRectMake(15, orderY, width-30, 30))\n        order.setTitle(\"预定信息\", forState: UIControlState.Normal)\n        order.setTitleColor(UIColor.orangeColor(), forState: UIControlState.Normal)\n        order.contentHorizontalAlignment = UIControlContentHorizontalAlignment.Left\n        order.setBackgroundImage(UIImage(named: \"listBackground\"), forState: UIControlState.Normal)\n        order.titleLabel?.font = UIFont.systemFontOfSize(17)\n        scrollView.addSubview(order)\n\n        let facilitatorID = UILabel(frame: CGRectMake(15, orderY+35, labelW, 25))\n        facilitatorID.text = \"服务人员ID:\\(ServantDetail.servantID) \"\n        facilitatorID.textColor = UIColor.blackColor()\n        facilitatorID.font = UIFont.systemFontOfSize(15)\n        scrollView.addSubview(facilitatorID)\n     \n        let servantName1 = UILabel(frame: CGRectMake(15, orderY+35+25, labelW, 25))\n        servantName1.text = \"服务人员名字:\\(ServantDetail.servantName)\"\n        servantName1.textColor = UIColor.blackColor()\n        servantName1.font = UIFont.systemFontOfSize(15)\n        scrollView.addSubview(servantName1)\n        \n        //服务项目\n        let itemName = UILabel(frame: CGRectMake(15, orderY+35+2*25, labelW, 25))\n        itemName.text = \"服务项目:\\(ServiceType)\"\n        itemName.textColor = UIColor.blackColor()\n        itemName.font = UIFont.systemFontOfSize(15)\n        scrollView.addSubview(itemName)\n        //薪水\n        let salaryLabel = UILabel(frame: CGRectMake(15, orderY+35+3*25, 35, 25))\n        salaryLabel.text = \"薪水:\"\n        salaryLabel.textColor = UIColor.blackColor()\n        salaryLabel.font = UIFont.systemFontOfSize(15)\n        scrollView.addSubview(salaryLabel)\n        \n        salary = UITextField(frame: CGRectMake(80, orderY+35+3*25, 180, 30))\n        salary.borderStyle = UITextBorderStyle.RoundedRect\n        salary.clearButtonMode=UITextFieldViewMode.WhileEditing\n//        //编辑时出现清除按钮\n//        salary.text = myinfo.customerName\n        scrollView.addSubview(salary)\n        \n        let yuan = UILabel(frame: CGRectMake(260, orderY+40+3*25, 20, 25))\n        yuan.text = \"元\"\n        yuan.textColor = UIColor.blackColor()\n        yuan.font = UIFont.systemFontOfSize(15)\n        scrollView.addSubview(yuan)\n\n        \n         customerInfoY  =  orderY+35+4*25+20\n        let customerN = UILabel(frame: CGRectMake(15, customerInfoY, labelW, 25))\n        customerN.text = \"客户姓名:\"\n        customerN.textColor = UIColor.blackColor()\n        customerN.font = UIFont.systemFontOfSize(15)\n        scrollView.addSubview(customerN)\n        customerName = UITextField(frame: CGRectMake(80, customerInfoY, width-90, 30))\n        customerName.borderStyle = UITextBorderStyle.RoundedRect\n        customerName.clearButtonMode=UITextFieldViewMode.WhileEditing\n        //编辑时出现清除按钮\n        customerName.text = myinfo.customerName\n        scrollView.addSubview(customerName)\n        \n\n        let quyu = UILabel(frame: CGRectMake(15, customerInfoY+35, 80, 25))\n        quyu.text = \"所在区域:\"\n        quyu.textColor = UIColor.blackColor()\n        quyu.font = UIFont.systemFontOfSize(15)\n        scrollView.addSubview(quyu)\n        \n        \n        pickview = UIPickerView(frame: CGRectMake(0,300, self.view.frame.width, 300))\n        //添加ToolBar（可以不要）\n        \n        let f = pickview.frame\n        let toolbar = UIToolbar(frame: CGRectMake(0, 0, f.width, (f.height * 0.15)))\n        var buttons = [UIBarButtonItem]()\n        let space = UIBarButtonItem(barButtonSystemItem: UIBarButtonSystemItem.FlexibleSpace, target: nil, action: nil)\n        buttons.append(space)\n        let doneButton = UIBarButtonItem(title: \"确定\", style: UIBarButtonItemStyle.Plain, target: self, action: \"donePressed\")\n        buttons.append(doneButton)\n        toolbar.setItems(buttons, animated: false)\n\n//        provinces = [\"沈阳市\":[\"和平区\",\"大东区\",\"沈河区\",\"皇姑区\",\"铁西区\",\"浑南区\",\"于洪区\",\"沈北新区\",\"苏家屯区\",\"新民市\",\"辽中县\",\"康平县\",\"法库县\"]]\n//        cities = provinces.values.array[0]\n//        println(\"cities:\\(cities)\")\n        pickview = UIPickerView()\n        pickview.delegate = self\n        pickview.dataSource = self\n        let listPath  = NSBundle.mainBundle().pathForResource(\"area.plist\", ofType: nil)\n        //第一层\n        \n        root =  NSMutableArray(contentsOfFile:listPath!)!//root\n        \n        dictionary1 = root.objectAtIndex(0) as! NSDictionary//item0\n        //第二层\n        \n        cities = dictionary1.objectForKey(\"cities\") as! NSArray\n        \n        let dictionary2:NSDictionary =  cities.objectAtIndex(0) as! NSDictionary\n        //第三层\n        \n        areas = dictionary2.objectForKey(\"areas\") as! NSArray\n\n        serviceCounty = UITextField(frame: CGRectMake(80, customerInfoY+35, width-90, 30))\n        serviceCounty.borderStyle = UITextBorderStyle.RoundedRect\n        serviceCounty.adjustsFontSizeToFitWidth=true  //当文字超出文本框宽度时，自动调整文字大小\n        serviceCounty.minimumFontSize=12\n        serviceCounty.clearButtonMode=UITextFieldViewMode.WhileEditing\n        //编辑时出现清除按钮\n       \n        serviceCounty.inputView = pickview\n        selectprovince = myinfo.customerProvince\n        selectcity = myinfo.customerCity\n        selectcounty = myinfo.customerCounty\n        serviceCounty.text = \"\\(selectprovince)省 \\(selectcity)市 \\(selectcounty)\"\n        serviceCounty.inputAccessoryView = toolbar\n        scrollView.addSubview(serviceCounty)\n\n\n         servantID = UILabel(frame: CGRectMake(15, customerInfoY+70, 80, 25))\n        servantID!.text = \"详细地址:\"\n        servantID!.textColor = UIColor.blackColor()\n        servantID!.font = UIFont.systemFontOfSize(15)\n        scrollView.addSubview(servantID!)\n        \n        dizhi = UITextField(frame: CGRectMake(80, customerInfoY+70, width-90, 30))\n        dizhi.borderStyle = UITextBorderStyle.RoundedRect\n        dizhi.adjustsFontSizeToFitWidth=true  //当文字超出文本框宽度时，自动调整文字大小\n        dizhi.minimumFontSize=12\n\n        dizhi.clearButtonMode=UITextFieldViewMode.WhileEditing\n        //编辑时出现清除按钮\n        dizhi.text = myinfo.contactAddress\n        scrollView.addSubview(dizhi)\n        \n        \n        \n        let  time = UILabel(frame: CGRectMake(15, customerInfoY+105, 80, 25))\n        time.text = \"服务时间:\"\n        time.textColor = UIColor.blackColor()\n        time.font = UIFont.systemFontOfSize(15)\n        scrollView.addSubview(time)\n        \n        // 初始化 datePicker\n        datePicker = UIDatePicker(frame: CGRectMake(0,300, self.view.frame.width, 300))\n        // 设置样式，当前设为同时显示日期\n        datePicker.datePickerMode = UIDatePickerMode.DateAndTime\n        // datePicker.hidden = true\n        datePicker.locale = NSLocale(localeIdentifier: \"zh_CN\")\n        // 设置分钟表盘的时间间隔（必须能让60整除，默认是1分钟）\n        datePicker.minuteInterval = 5\n      \n        // 设置默认时间\n        datePicker.date = NSDate()\n       \n        serviceTime = UITextField(frame: CGRectMake(80, customerInfoY+105, width-90, 30))\n        serviceTime.borderStyle = UITextBorderStyle.RoundedRect\n        serviceTime.adjustsFontSizeToFitWidth=true  //当文字超出文本框宽度时，自动调整文字大小\n        serviceTime.minimumFontSize=12\n       \n        serviceTime.clearButtonMode=UITextFieldViewMode.WhileEditing\n        //编辑时出现清除按钮\n        serviceTime.inputView = datePicker\n        serviceTime.inputAccessoryView = toolbar\n        scrollView.addSubview(serviceTime)\n\n        \n        let serviceType = UILabel(frame: CGRectMake(15, customerInfoY+140, 80, 25))\n        serviceType.text = \"联系电话:\"\n        serviceType.textColor = UIColor.blackColor()\n        serviceType.font = UIFont.systemFontOfSize(15)\n        scrollView.addSubview(serviceType)\n        dianhua = UITextField(frame: CGRectMake(80, customerInfoY+140, width-90, 30))\n        dianhua.text = myinfo.mobilePhone\n        dianhua.borderStyle = UITextBorderStyle.RoundedRect\n        dianhua.adjustsFontSizeToFitWidth=true  //当文字超出文本框宽度时，自动调整文字大小\n        dianhua.minimumFontSize=12\n\n        dianhua.clearButtonMode=UITextFieldViewMode.WhileEditing\n        //编辑时出现清除按钮\n        scrollView.addSubview(dianhua)\n    \n        //备注\n        let remark = UILabel(frame: CGRectMake(15, customerInfoY+175,50, 20))\n        remark.text = \"备注:\"\n        remark.textColor = UIColor.blackColor()\n        remark.font = UIFont.systemFontOfSize(15)\n        scrollView.addSubview(remark)\n        \n        beizhu = UITextView(frame: CGRectMake(80, customerInfoY+175,width-90, 80))\n        //字体\n        beizhu.font = UIFont.systemFontOfSize(15)\n        beizhu.textColor = UIColor.blackColor()\n        \n        //边框粗细\n        beizhu.layer.borderWidth = 0.2\n        //边框颜色\n        beizhu.layer.borderColor = UIColor.grayColor().CGColor\n        //圆角\n        beizhu.layer.cornerRadius = 5\n        //是否可以滚动\n        beizhu.scrollEnabled = true\n        //自适应高度\n        beizhu.autoresizingMask = UIViewAutoresizing.FlexibleHeight\n        //使文本框在界面打开时就获取焦点，并弹出输入键盘\n        //        ReasonField.becomeFirstResponder()\n        //使文本框失去焦点，并收回键盘\n        beizhu.resignFirstResponder()\n        //键盘形式\n        beizhu.keyboardType = UIKeyboardType.Twitter\n        scrollView.addSubview(beizhu)\n        //预定按钮\n         CBY = customerInfoY+215+80\n        yuyue = UIButton(frame:CGRectMake(width/2-125, CBY,250,30))\n        yuyue! .setTitle(\"确认预订\", forState:UIControlState.Normal)\n        yuyue!.setTitleColor(UIColor.whiteColor(), forState: UIControlState.Normal)\n        yuyue!.titleLabel?.font = UIFont.systemFontOfSize(15)\n        yuyue!.contentHorizontalAlignment = UIControlContentHorizontalAlignment.Center\n        yuyue!.showsTouchWhenHighlighted = true\n        yuyue?.layer.cornerRadius = 5\n        yuyue!.backgroundColor = UIColor.orangeColor()\n        scrollView.addSubview(yuyue!)\n        yuyue!.addTarget(self , action:Selector(\"yuding:\"), forControlEvents: UIControlEvents.TouchUpInside)\n        \n        \n        //scrollView.contentSize = CGSizeMake(width,64+CBY+30+253)\n        scrollView.contentSize = CGSizeMake(width,64+CBY+30)\n        print(scrollView.bounds.height)\n        \n        \n    }\n    //toolBar 的函数\n    func donePressed() {\n        serviceTime.resignFirstResponder()\n        \n\n        // NSDate转化NSString\n        let s = datePicker.date\n        let dateFormatter = NSDateFormatter()\n        dateFormatter.dateFormat = \"yyyy-MM-dd HH:mm\"\n        Date = dateFormatter.stringFromDate(s)\n        \n        print(\"Date\\(Date)\")\n        serviceTime.text = \"\\(Date)\"\n        \n        serviceCounty.resignFirstResponder()\n        \n//        let provinceNum = pickview.selectedRowInComponent(0)\n//        let cityNum = pickview.selectedRowInComponent(1)\n//        \n//        let areaNum = pickview.selectedRowInComponent(2)\n//        \n//        let pr: AnyObject? = root[provinceNum].objectForKey(\"state\")\n//        let cit:AnyObject? = cities[cityNum].objectForKey(\"city\")\n//        \n//      \n//        selectprovince = pr as! String\n//        selectcity = cit as! String\n//        selectcounty = areas[areaNum] as! String\n        serviceCounty.text = \"\\(selectprovince)省 \\(selectcity)市 \\(selectcounty)\"\n        \n        \n    }\n    //设置列数\n    func numberOfComponentsInPickerView(pickerView: UIPickerView) -> Int {\n        return 3\n    }\n    //设置行数\n    \n    func pickerView(pickerView: UIPickerView, numberOfRowsInComponent component: Int) -> Int {\n        \n        if component == 0 {\n            \n            return root.count\n        }\n        \n        \n        if component == 1 {\n         \n            return cities.count\n       \n        }\n \n        if component == 2 {\n            \n            return areas.count\n            \n        }\n        \n        return 0\n        \n        \n    }\n    \n    //设置每行具体内容（titleForRow 和 viewForRow 二者实现其一即可）\n    \n    func  pickerView(pickerView: UIPickerView, titleForRow row: Int, forComponent component: Int) -> String! {\n        if component == 0 {\n            //return month[row]\n            //return provinces.keys.array[row]\n            return root[row].objectForKey(\"state\") as! String\n        }\n        \n        if component == 1{\n            //return week[row]\n            return cities[row].objectForKey(\"city\") as! String\n            \n        }\n        if component == 2{\n            //return week[row]\n            return areas[row] as! String\n            \n        }\n        return nil\n\n    }\n    \n    //选中行的操作\n    \n    func pickerView(pickerView: UIPickerView, didSelectRow row: Int, inComponent component: Int) {\n        \n        \n        \n        if(component == 0){\n            \n            dictionary1 = root.objectAtIndex(row) as! NSDictionary//item0\n            //第二层\n            \n            \n            cities = dictionary1.objectForKey(\"cities\") as! NSArray\n            \n            // 重新加载二级选项并复位\n            \n            pickerView.reloadComponent(1)\n            pickerView.selectRow(0, inComponent: 1, animated: true)\n            \n            let dictionary2:NSDictionary =  cities.objectAtIndex(0) as! NSDictionary\n            \n            areas = dictionary2.objectForKey(\"areas\") as! NSArray\n            \n            // 重新加载三级选项并复位\n            \n            pickerView.reloadComponent(2)\n            pickerView.selectRow(0, inComponent: 2, animated: true)\n            \n        }\n        \n        if(component == 1){\n            \n            let dictionary2:NSDictionary =  cities.objectAtIndex(row) as! NSDictionary\n            \n            areas = dictionary2.objectForKey(\"areas\") as! NSArray\n            \n            // 重新加载三级选项并复位\n            \n            pickerView.reloadComponent(2)\n            pickerView.selectRow(0, inComponent: 2, animated: true)\n            \n            \n            \n            \n        }\n        let provinceNum = pickview.selectedRowInComponent(0)\n        let cityNum = pickview.selectedRowInComponent(1)\n        \n        let areaNum = pickview.selectedRowInComponent(2)\n        \n        let pr: AnyObject? = root[provinceNum].objectForKey(\"state\")\n        let cit:AnyObject? = cities[cityNum].objectForKey(\"city\")\n        \n        \n        selectprovince = pr as! String\n        selectcity = cit as! String\n        selectcounty = areas[areaNum] as! String\n    }\n    \n\n    \n    \n    \n    //预定的跳转函数\n    func yuding(yuyue:UIButton){\n        \n \n\n        if dizhi.text == \"\" || dianhua.text.lengthOfBytesUsingEncoding(NSUTF8StringEncoding) != 11||serviceCounty.text == \"\"||serviceTime.text == \"\"||customerName.text == \"\"||salary.text == \"\"{\n            let alert =  UIAlertView(title: \"\", message: \"请填写完整\", delegate: self, cancelButtonTitle: \"确定\")\n             // alert.tag = 1\n            alert.show()\n            \n        }else {\n            \n            \n            var geocodeSearchOption = BMKGeoCodeSearchOption()\n            geocodeSearchOption.city = selectcity\n            geocodeSearchOption.address = selectcounty + dizhi.text\n            print(\"dizhi:\\(geocodeSearchOption.address)\")\n            var flag = geocodeSearch.geoCode(geocodeSearchOption)\n            if flag {\n                print(\"geo 检索发送成功！\")\n            }else {\n                print(\"geo 检索发送失败！\")\n            }\n        \n         \n        }\n    }\n    func  alertView(alertView: UIAlertView, clickedButtonAtIndex buttonIndex: Int) {\n        if alertView.tag == 1{\n        self.dismissViewControllerAnimated(true, completion: nil)\n        }\n        \n        //self.performSegueWithIdentifier(\"OrderServantTo\", sender: self)\n    }\n  \n    override func didReceiveMemoryWarning() {\n        super.didReceiveMemoryWarning()\n        // Dispose of any resources that can be recreated.\n    }\n \n    \n    \n\n\n\n    //导航条详情\n    func reply (){\n        self.dismissViewControllerAnimated(true, completion: nil)\n    }\n    \n    func onMakeNavitem() -> UINavigationItem{\n        print(\"创建导航条step1\")\n        //创建一个导航项\n        let navigationItem = UINavigationItem()\n        //创建左边按钮\n        let leftButton =  UIBarButtonItem(barButtonSystemItem: UIBarButtonSystemItem.Reply, target: self, action: \"reply\")\n        //var leftButton =  UIBarButtonItem(title: \"返回\", style: UIBarButtonItemStyle.Bordered, target: self, action: \"reply\")\n        //导航栏的标题\n        navigationItem.title = \"订单详情\"\n        //设置导航栏左边按钮\n        navigationItem.setLeftBarButtonItem(leftButton, animated: true)\n        \n        navigationBar?.pushNavigationItem(navigationItem, animated: true)\n        \n        \n        return navigationItem\n    }\n    \n    \n    //从NSUerDefaults 中读取数据\n    func readNSUerDefaults () {\n        \n        let userDefaultes = NSUserDefaults.standardUserDefaults()\n        if  (userDefaultes.stringForKey(\"customerID\")) != nil && (userDefaultes.stringForKey(\"loginPassword\")) != nil{\n             customerid = userDefaultes.stringForKey(\"customerID\")!\n            print(\"OrderDetailVC\\(customerid)\")\n            loginPassword = userDefaultes.stringForKey(\"loginPassword\")!\n                  print(\"OrderDetailVC\\(loginPassword)\")\n        }\n        \n          ServiceType = userDefaultes.stringForKey(\"ServiceType\")!\n    }\n    \n  \n    // MARK: - 地理解码相关协议实现\n    //\n    func onGetGeoCodeResult(searcher: BMKGeoCodeSearch!, result: BMKGeoCodeResult!, errorCode error: BMKSearchErrorCode) {\n         print(\"地理编码\")\n        if error.rawValue == 0 {\n            var item = BMKPointAnnotation()\n            item.coordinate = result.location\n            item.title = result.address\n            serviceLatitude = item.coordinate.latitude\n            serviceLongitude = item.coordinate.longitude\n            print(\"La:\\(serviceLatitude)\")\n              print(\"Long:\\(serviceLongitude)\")\n \n        }\n        let serverResponse = QureyDeclare(customerid, customerName: customerName.text, servantID: ServantDetail.servantID,servantName: ServantDetail.servantName, phoneNo: dianhua.text, serviceTime: serviceTime.text,serviceProvince: selectprovince, serviceCity: selectcity, serviceCounty: selectcounty, serviceAddress: dizhi.text,serviceLongitude: \"\\(serviceLongitude)\", serviceLatitude: \"\\(serviceLatitude)\", salary: salary.text, serviceType: ServiceType, remarks: beizhu.text)\n        \n        if serverResponse == \"Success\"{\n            \n            let alert =  UIAlertView(title: \"预定成功\", message: \"商家会尽快与您取得联系!\", delegate: self, cancelButtonTitle: \"确定\")\n            alert.tag = 1\n            alert.show()\n            \n            \n        }else if serverResponse == \"Failed\"{\n            \n            let alert =  UIAlertView(title: \"预定失败\", message: \"请重试\", delegate: self, cancelButtonTitle: \"确定\")\n            //alert.tag = 1\n            alert.show()\n            \n        }\n    }\n\n    func touchScrollView(sender: UITapGestureRecognizer){\n        print",
 }
]

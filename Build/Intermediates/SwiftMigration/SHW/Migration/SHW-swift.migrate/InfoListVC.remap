[
 {
  "file": "/Users/zhang/Desktop/HouseKeeping 2/SHW/InfoListVC.swift",
  "offset": 1004,
  "remove": 14114,
  "text": "(\"本地存储\")\n        print(customerid)\n        print(loginPassword)\n        info = QueryInfo(customerid) as MyInfo\n        let  width = self.view.frame.width\n        let  height = self.view.frame.height\n        //实例化导航条\n        navigationBar = UINavigationBar(frame: CGRectMake(0, 0, self.view.frame.width, 64))\n        self.view.addSubview(navigationBar!)\n        print(\"创建导航条详情\")\n        onMakeNavitem()\n        \n        let headY = CGFloat(100)\n        \n        headPicture = UIImageView(frame: CGRectMake(width/2-50, headY, CGFloat(100),CGFloat(100)))\n//        headPicture = UIImageView()\n//        headPicture!.frame.origin = CGPoint(x:width/2-90,y:headY);\n        headPicture!.contentMode = UIViewContentMode.ScaleAspectFit;\n        headPicture!.layer.cornerRadius = 50;\n        headPicture!.layer.masksToBounds = true;\n        // headPicture = UIImageView(frame: CGRectMake(width/2-90, headY, CGFloat(180),CGFloat(150)))\n        \n        //网络地址获取图片\n        //1.定义一个地址字符串常量\n        print(\"客户\")\n        let imageUrlString:String = HttpData.http+\"/NationalService/\\(info.headPicture)\"\n        print(\"imageUrlString:\\(imageUrlString)\")\n        //        //2.通过String类型，转换NSUrl对象\n        let url:NSString = imageUrlString.URLEncodedString()\n      \n\n        headPicture!.setZYHWebImage(url as String, defaultImage: \"touxiang.jpg\")\n        \n//            headPicture!.image = UIImage(named: \"touxiang.jpg\")!\n     \n        self.view.addSubview(headPicture!)\n        \n        let buttonW = width\n       let buttonY = CGFloat(headY+160)\n       let buttonH = CGFloat((height-320)/5)\n        button1 = UIButton(frame:CGRectMake(0,buttonY,buttonW,buttonH))\n        button1!.setTitle(\"修改头像\", forState: UIControlState.Normal)\n        button1!.setTitleColor(UIColor.blueColor(), forState: UIControlState.Normal)\n        button1!.setBackgroundImage(UIImage(named: \"listBackground\"), forState: UIControlState.Normal)\n       // button1!.backgroundColor = UIColor.orangeColor()\n        button1!.titleLabel!.font = UIFont.systemFontOfSize(14)\n        button1!.addTarget(self , action: Selector(\"JumpTo1\"), forControlEvents: UIControlEvents.TouchUpInside)\n//        button1?.hidden = true\n        self.view.addSubview(button1!)\n        button2 = UIButton(frame:CGRectMake(0,buttonY+buttonH,buttonW,buttonH))\n        button2!.setTitle(\"基本资料\", forState: UIControlState.Normal)\n        button2!.setTitleColor(UIColor.blueColor(), forState: UIControlState.Normal)\n        button2!.setBackgroundImage(UIImage(named: \"listBackground\"), forState: UIControlState.Normal)\n        //button1!.backgroundColor = UIColor.orangeColor()\n        button2!.titleLabel!.font = UIFont.systemFontOfSize(16)\n        button2!.addTarget(self , action: Selector(\"JumpTo2\"), forControlEvents: UIControlEvents.TouchUpInside)\n        self.view.addSubview(button2!)\n        button3 = UIButton(frame:CGRectMake(0,buttonY+2*buttonH,buttonW,buttonH))\n        button3!.setTitle(\"修改密码\", forState: UIControlState.Normal)\n        button3!.setTitleColor(UIColor.blueColor(), forState: UIControlState.Normal)\n        button3!.setBackgroundImage(UIImage(named: \"listBackground\"), forState: UIControlState.Normal)\n        //button1!.backgroundColor = UIColor.orangeColor()\n        button3!.titleLabel!.font = UIFont.systemFontOfSize(16)\n        button3!.addTarget(self , action: Selector(\"JumpTo3\"), forControlEvents: UIControlEvents.TouchUpInside)\n        self.view.addSubview(button3!)\n//        button4 = UIButton(frame:CGRectMake(0,buttonY+3*buttonH,buttonW,buttonH))\n//        button4!.setTitle(\"通用设置\", forState: UIControlState.Normal)\n//        button4!.setTitleColor(UIColor.blueColor(), forState: UIControlState.Normal)\n//        button4!.setBackgroundImage(UIImage(named: \"listBackground\"), forState: UIControlState.Normal)\n//        //button1!.backgroundColor = UIColor.orangeColor()\n//        button4!.titleLabel!.font = UIFont.systemFontOfSize(16)\n//        button4!.addTarget(self , action: Selector(\"JumpTo4\"), forControlEvents: UIControlEvents.TouchUpInside)\n//        self.view.addSubview(button4!)\n//        button5 = UIButton(frame:CGRectMake(0,buttonY+4*buttonH,buttonW,buttonH))\n//        button5!.setTitle(\"关于软件\", forState: UIControlState.Normal)\n//        button5!.setTitleColor(UIColor.blueColor(), forState: UIControlState.Normal)\n//        button5!.setBackgroundImage(UIImage(named: \"listBackground\"), forState: UIControlState.Normal)\n//        //button1!.backgroundColor = UIColor.orangeColor()\n//        button5!.titleLabel!.font = UIFont.systemFontOfSize(16)\n//        button5!.addTarget(self , action: Selector(\"JumpTo5\"), forControlEvents: UIControlEvents.TouchUpInside)\n//        self.view.addSubview(button5!)\n        let quitX = CGFloat((width-250)/2)\n        quit = UIButton(frame:CGRectMake(quitX,height-60,250,30))\n        quit!.setTitle(\"退出当前登录\", forState: UIControlState.Normal)\n        quit!.setTitleColor(UIColor.whiteColor(), forState: UIControlState.Normal)\n        quit!.backgroundColor = UIColor.orangeColor()\n        quit!.layer.cornerRadius = 5\n        quit!.titleLabel!.font = UIFont.systemFontOfSize(17)\n        quit!.addTarget(self , action: Selector(\"JumpTo6\"), forControlEvents: UIControlEvents.TouchUpInside)\n        self.view.addSubview(quit!)\n    }\n    //跳转函数\n    func JumpTo1(){\n            //self.performSegueWithIdentifier(\"toHeadPicture\", sender: self)\n        \n        let imagePicker = UIImagePickerController()\n        imagePicker.delegate=self\n        imagePicker.sourceType=UIImagePickerControllerSourceType.PhotoLibrary\n        imagePicker.modalTransitionStyle=UIModalTransitionStyle.CoverVertical\n        imagePicker.allowsEditing=true\n        self.presentViewController(imagePicker, animated:true, completion: nil)\n        \n        \n    }\n    func JumpTo2(){\n        self.performSegueWithIdentifier(\"toBaseInfo\", sender: self)\n    }\n    func JumpTo3(){\n        self.performSegueWithIdentifier(\"toChangePassword\", sender: self)\n    }\n    func JumpTo4(){\n        //self.performSegueWithIdentifier(\"toBaseInfo\", sender: self)\n    }\n    func JumpTo5(){\n        //self.performSegueWithIdentifier(\"toBaseInfo\", sender: self)\n    }\n    func JumpTo6(){\n        removeNSUerDefaults()\n//        HttpData.customerid = \"\"\n//        HttpData.loginpassword  = \"\"\n        self.performSegueWithIdentifier(\"toQuit\", sender: self)\n\n    }\n    \n    //上传图片\n    func imagePickerController(picker:UIImagePickerController, didFinishPickingMediaWithInfo info: [String :AnyObject])\n    {\n        self.dismissViewControllerAnimated(true, completion:nil);\n        \n        let gotImage=info[UIImagePickerControllerOriginalImage]as! UIImage\n        \n        let midImage:UIImage=self.imageWithImageSimple(gotImage,scaledToSize:CGSizeMake(100.0,100.0))//这是对图片进行缩放，因为固定了长宽，所以这个方法会变型，有需要的自已去完善吧， 这里只是粗略使用。\n        upload(midImage)//上传\n    }\n    //缩放图片\n    func imageWithImageSimple(image:UIImage,scaledToSize newSize:CGSize)->UIImage\n    {\n        UIGraphicsBeginImageContext(newSize);\n        image.drawInRect(CGRectMake(0,0,newSize.width,newSize.height))\n        let newImage:UIImage=UIGraphicsGetImageFromCurrentImageContext();\n        UIGraphicsEndImageContext();\n        return newImage;\n        \n    }\n    \n    //上传\n    func upload(img:UIImage)\n    {\n        \n        //        lb.frame=CGRectMake(0,0,300,20)\n        //\n        //        lb.textColor=UIColor.whiteColor()\n        //        lb.text=\"上传中....\"\n        //        lb.textAlignment=NSTextAlignment.Center\n        //        lb.backgroundColor=UIColor.blackColor()\n        //        lb.alpha=1\n        //\n        //       // 添加风火轮\n        //        av.frame=CGRectMake(200,200,20, 20)\n        //        av.backgroundColor=UIColor.whiteColor()\n        //        av.color=UIColor.redColor()\n        //        av.startAnimating()\n        \n        \n        \n        //\n        //        self.view.addSubview(av)\n        //\n        //        self.view.addSubview(lb)\n        \n        let data=UIImagePNGRepresentation(img)//把图片转成data\n        print(\"data\\(data)\")\n           headPicture!.image = UIImage(data: data)\n        \n        let uploadurl:String=\"http://219.216.65.182:8080/NationalService/MultiFormAction?operation=_updateCustomerPicture\"//设置服务器接收地址\n        let request=NSMutableURLRequest(URL:NSURL(string:uploadurl)!)\n        \n        request.HTTPMethod=\"POST\"//设置请求方式\n        var boundary:String=\"-------------------\"\n        //上传文件必须设置\n        var contentType:String=\"multipart/form-data;boundary=\"+boundary\n        request.addValue(contentType, forHTTPHeaderField:\"Content-Type\")\n        var body=NSMutableData()\n        var customerID = customerid\n        \n        //        一个图片\n        body.appendData(NSString(format:\"\\r\\n--\\(boundary)\\r\\n\").dataUsingEncoding(NSUTF8StringEncoding)!)\n        body.appendData(NSString(format:\"Content-Disposition:form-data;name=\\\"userfile\\\";filename=\\\"1.jpg\\\"\\r\\n\").dataUsingEncoding(NSUTF8StringEncoding)!)\n        body.appendData(NSString(format:\"Content-Type:application/octet-stream\\r\\n\\r\\n\").dataUsingEncoding(NSUTF8StringEncoding)!)\n        body.appendData(data)\n        body.appendData(NSString(format:\"\\r\\n--\\(boundary)\").dataUsingEncoding(NSUTF8StringEncoding)!)\n        \n        //        传入一个普通参数\n        body.appendData(NSString(format:\"\\r\\n--\\(boundary)\\r\\n\").dataUsingEncoding(NSUTF8StringEncoding)!)\n        body.appendData(NSString(format:\"Content-Disposition:form-data;name=\\\"customerID\\\"\\r\\n\").dataUsingEncoding(NSUTF8StringEncoding)!)\n        body.appendData(NSString(format:\"Content-Type:text/plain;charset=utf-8\\r\\n\\r\\n\").dataUsingEncoding(NSUTF8StringEncoding)!)\n        body.appendData(NSString(format:\"\\(customerID)\").dataUsingEncoding(NSUTF8StringEncoding)!)\n        body.appendData(NSString(format:\"\\r\\n--\\(boundary)\").dataUsingEncoding(NSUTF8StringEncoding)!)\n        \n        \n        request.HTTPBody=body\n        let que=NSOperationQueue()\n        NSURLConnection.sendAsynchronousRequest(request, queue: que, completionHandler: {\n            (response, data, error) ->Void in\n            \n            if (error != nil){\n            print(error)\n        }else{\n            //Handle data in NSData type\n//             println(\"data\\(data)\")\n//             println(\"response\\(response)\")\n            var tr:AnyObject=NSString(data:data,encoding:NSUTF8StringEncoding)!\n            //var test2: AnyObject? = json?.objectForKey(\"tr\")\n//            let json:AnyObject? = NSJSONSerialization.JSONObjectWithData(tr, options: NSJSONReadingOptions.AllowFragments, error: nil)\n//            //        var dic = dict as! NSDictionary\n           // println(test2)\n            print(\"tr\\(tr)\")\n//            let serverResponse = tr.objectForKey(\"serverResponse\") as? String\n//            println(serverResponse)\n          \n            \n            //在主线程中更新UI风火轮才停止\n            dispatch_sync(dispatch_get_main_queue(), {\n            //self.av.stopAnimating()\n            //self.lb.hidden=true\n            \n            })\n            \n            }\n            })\n    }\n\n    \n    \n    \n    override func didReceiveMemoryWarning() {\n        super.didReceiveMemoryWarning()\n        // Dispose of any resources that can be recreated.\n    }\n    \n    //导航条详情\n    func reply (){\n        //self.dismissViewControllerAnimated(true, completion: nil)\n        self.performSegueWithIdentifier(\"toQuit\", sender: self)\n    }\n    \n    func onMakeNavitem() -> UINavigationItem{\n        print(\"创建导航条step1\")\n        //创建一个导航项\n        let navigationItem = UINavigationItem()\n        //创建左边按钮\n        let leftButton =  UIBarButtonItem(barButtonSystemItem: UIBarButtonSystemItem.Reply, target: self, action: \"reply\")\n        //var leftButton =  UIBarButtonItem(title: \"返回\", style: UIBarButtonItemStyle.Bordered, target: self, action: \"reply\")\n        //导航栏的标题\n        navigationItem.title = \"我的信息\"\n        //设置导航栏左边按钮\n        navigationItem.setLeftBarButtonItem(leftButton, animated: true)\n        \n        navigationBar?.pushNavigationItem(navigationItem, animated: true)\n        \n        \n        return navigationItem\n    }\n    //从NSUerDefaults 中读取数据\n    func readNSUerDefaults () {\n        \n        let userDefaultes = NSUserDefaults.standardUserDefaults()\n        if  (userDefaultes.stringForKey(\"customerID\")) != nil && (userDefaultes.stringForKey(\"loginPassword\")) != nil{\n            customerid = userDefaultes.stringForKey(\"customerID\")!\n            loginPassword = userDefaultes.stringForKey(\"loginPassword\")!\n            \n        }\n        \n    }\n//    //清除NSUerDefaults中数据\n    func removeNSUerDefaults () {\n        \n        //将数据全部存储到NSUerDefaults中\n        let userDefaults:NSUserDefaults = NSUserDefaults.standardUserDefaults()\n        //存储时，除了NSNumber类型使用对应的类型外，其他的都使用setObject:forKey:\n        userDefaults.setObject(\"\" , forKey: \"customerID\")\n        userDefaults.setObject(\"\", forKey: \"loginPassword\")\n         \n        //建议同步到磁盘，但不是必须得\n        userDefaults.synchronize()\n        \n    }\n    override func prepareForSegue(segue: UIStoryboardSegue, sender: AnyObject?) {\n        if segue.identifier! == \"toHeadPicture\" {\n            let controller = segue.destinationViewController as! ChangeHeadPictureVC\n            let  object = info.headPicture\n            let   customerid = info.customerID\n            controller.Picturename = object\n            controller.customerID = customerid\n            \n        }else if segue.identifier! == \"toChangePassword\" {\n            let controller = segue.destinationViewController as! ChangePasswordVC\n            let  object = info.loginPassword\n            let",
 }
]

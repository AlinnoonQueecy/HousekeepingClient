[
 {
  "file": "/Users/zhang/Desktop/HouseKeeping 2/SHW/finishiorder.swift",
  "offset": 2045,
  "remove": 5022,
  "text": "let url: NSURL! = NSURL(string: HttpData.http+\"/NationalService/MobileServiceOrderAction?operation=_queryCOrder\")\n    \n    let request:NSMutableURLRequest = NSMutableURLRequest(URL:url, cachePolicy:NSURLRequestCachePolicy.UseProtocolCachePolicy,timeoutInterval: 10)\n    \n    request.HTTPMethod = \"POST\"\n    //var param:String = \"{\\\"customerAccount\\\":\\\"Alex\\\",\\\"Password\\\":\\\"a123\\\"}\"\n    let param:String = \"{\\\"customerID\\\":\\\"\\(customerID)\\\",\\\"orderStatus\\\":\\\"\\(orderStatus)\\\"}\"\n    let data:NSData = param.dataUsingEncoding(NSUTF8StringEncoding, allowLossyConversion: true)!\n    request.HTTPBody = data;\n    var response:NSURLResponse?\n    var error:NSError?\n    var receiveData:NSData?\n    do {\n        receiveData = try NSURLConnection.sendSynchronousRequest(request, returningResponse: &response)\n    } catch let error1 as NSError {\n        error = error1\n        receiveData = nil\n    }\n    if (error != nil)\n    {\n        print(error?.code)\n        print(error?.description)\n    }\n    else\n    {\n        let jsonString = NSString(data:receiveData!, encoding: NSUTF8StringEncoding)\n        print(jsonString)\n        \n    }\n    \n    let json:AnyObject! = try? NSJSONSerialization.JSONObjectWithData(receiveData!, options: NSJSONReadingOptions.AllowFragments)\n    \n    \n    var FinishiData:[Finishinfo] = []\n    let test1: AnyObject?=json.objectForKey(\"serverResponse\")\n    let  response1 :String = test1 as! String\n    if  response1 == \"Success\"{\n        let test2: AnyObject?=json.objectForKey(\"data\")\n        let jsonArray = test2 as? NSArray\n        var count = jsonArray?.count\n        \n        for value in jsonArray!{\n            let confirmTime:String=value.objectForKey(\"confirmTime\") as! String\n            let customerID:String=value.objectForKey(\"customerID\") as! String\n            let customerName:String=value.objectForKey(\"customerName\") as! String\n            let id:Int=value.objectForKey(\"id\") as! Int\n            let orderNo:String=value.objectForKey(\"orderNo\") as! String\n            \n            let orderStatus:String=value.objectForKey(\"orderStatus\") as! String\n            let orderTime:String=value.objectForKey(\"orderTime\") as! String\n            let paidAmount:Float=value.objectForKey(\"paidAmount\") as! Float\n            let remarks:String=value.objectForKey(\"remarks\") as! String\n            let servantID:String=value.objectForKey(\"servantID\") as! String\n            \n            \n            let servantName:String=value.objectForKey(\"servantName\") as! String\n            let serviceContent:String=value.objectForKey(\"serviceContent\") as! String\n            let servicePrice:Float=value.objectForKey(\"servicePrice\") as! Float\n            let serviceType:String=value.objectForKey(\"serviceType\") as! String\n            let contactPhone:String=value.objectForKey(\"contactPhone\") as! String\n            \n            let payTime:String=value.objectForKey(\"payTime\") as! String\n            let commentTime:String=value.objectForKey(\"commentTime\") as! String\n            let payType:String=value.objectForKey(\"payType\") as! String\n            let contactAddress:String=value.objectForKey(\"contactAddress\") as! String\n            \n            \n            \n            let obj:Finishinfo=Finishinfo(confirmTime: confirmTime, customerID: customerID, customerName: customerName, id: id, orderNo: orderNo, orderStatus: orderStatus, orderTime: orderTime, paidAmount: paidAmount, remarks: remarks, servantID: servantID, servantName: servantName, serviceContent: serviceContent, servicePrice: servicePrice, serviceType: serviceType,contactPhone:contactPhone,payTime:payTime,commentTime:commentTime,payType:payType,contactAddress:contactAddress)\n            \n            FinishiData += [obj]\n          \n        }\n    }\n    return FinishiData\n    \n}\n\n\n////1.1.\t确认服务完成(A)\nfunc vetifyFinish(orderNo:String) ->String  {\n\n    let url: NSURL! = NSURL(string: HttpData.http+\"/NationalService/MobileServiceOrderAction?operation=_vetifyFinish\")\n\n    let request:NSMutableURLRequest = NSMutableURLRequest(URL:url, cachePolicy:NSURLRequestCachePolicy.UseProtocolCachePolicy,timeoutInterval: 10)\n\n    request.HTTPMethod = \"POST\"\n    //var param:String = \"{\\\"customerAccount\\\":\\\"Alex\\\",\\\"Password\\\":\\\"a123\\\"}\"\n    let param:String = \"{\\\"orderNo\\\":\\\"\\(orderNo)\\\"}\"\n    print(\"VetifyFinish:\\(param)\")\n    let data:NSData = param.dataUsingEncoding(NSUTF8StringEncoding, allowLossyConversion: true)!\n    request.HTTPBody = data;\n    var response:NSURLResponse?\n    var error:NSError?\n    var receiveData:NSData?\n    do {\n        receiveData = try NSURLConnection.sendSynchronousRequest(request, returningResponse: &response)\n    } catch let error1 as NSError {\n        error = error1\n        receiveData = nil\n    }\n    if (error != nil)\n    {\n        print(error?.code)\n        print(error?.description)\n    }\n    else\n    {\n        let jsonString = NSString(data:receiveData!, encoding: NSUTF8StringEncoding)\n        print(jsonString)\n\n    }\n\n    let json:AnyObject! = try? NSJSONSerialization.JSONObjectWithData(receiveData!, options: NSJSONReadingOptions.AllowFragments)\n\n\n\n    let test1: AnyObject?=json.objectForKey(\"serverResponse\")\n    let  response1 :String = test1 as! String\n    print",
 }
]

[
 {
  "file": "/Users/zhang/Desktop/HouseKeeping 2/SHW/BusinessVC.swift",
  "offset": 1887,
  "remove": 12957,
  "text": "let width = self.view.frame.width\n            let height = self.view.frame.height\n            businessTable.dataSource = self\n            businessTable.delegate = self\n        //实例化导航条\n        navigationBar = UINavigationBar(frame: CGRectMake(0, 0, width, 64))\n        self.view.addSubview(navigationBar!)\n        print(\"创建导航条详情B\")\n        onMakeNavitem()\n            //读取本地存储的地址\n            readNSUerDefaults()\n        //类别\n            serviceTypeData = refreshServiceType(FirstType!) as![ServiceType]\n        \n            for var i = 0;i < serviceTypeData.count;i++ {\n            data2 += [serviceTypeData[i].typeName] // 小类名称\n            \n            }\n            //data2 = [\"月嫂\",\"保姆\",\"钟点工\"]\n            SecondType  = data2[row1]\n            saveNSUerDefaults ()\n        \n            ServantData = refreshServant(SecondType,attributeName: attributeName,upDown: upDown,serviceArea: facilitatorCounty) as! [ServantInfo]\n            isPerson =  1\n            data3 = [\"默认排序\",\"人员星级\",\"服务次数\"]\n            data31 = [\"\",\"servantScore\",\"serviceCount\"]\n            writing.enabled = true\n            writing.hidden = false\n            \n      \n \n \n        //change by LZF\n          //data1 = [\"区域不限\",\"和平区\",\"大东区\",\"沈河区\",\"皇姑区\",\"铁西区\",\"浑南区\",\"于洪区\",\"沈北新区\",\"苏家屯区\",\"新民市\",\"辽中县\",\"康平县\",\"法库县\"]\n        \n//          println(\"location\\(location)\")\n          data12 = queryCounty(location) as! [String]\n          data1 += data12\n//          println(data1)\n          //data11 = [\"\",\"和平区\",\"大东区\",\"沈河区\",\"皇姑区\",\"铁西区\",\"浑南区\",\"于洪区\",\"沈北新区\",\"苏家屯区\",\"新民市\",\"辽中县\",\"康平县\",\"法库县\"]\n        data11 += data12\n \n        \n        let menu = JSDropDownMenu(origin: label.frame.origin, andHeight: label.frame.size.height)\n        menu.indicatorColor = UIColor(red: 175.0/255.0, green: 175.0/255.0, blue: 175.0/255.0, alpha: 1.0)\n        menu.separatorColor = UIColor(red: 210.0/255.0, green: 210.0/255.0, blue: 210.0/255.0, alpha: 1.0)\n        menu.textColor = UIColor(red: 83.0/255.0, green: 83.0/255.0, blue: 83.0/255.0, alpha: 1.0)\n        menu.dataSource = self;\n        menu.delegate = self;\n        label.removeFromSuperview()\n        self.view.addSubview(menu)\n        \n        writing = UIButton(frame: CGRect(x: width-100, y: height-70, width: 100, height:50))\n        let background  = UIImage(named: \"u4\")\n        writing.setBackgroundImage(background, forState: UIControlState.Normal)\n        writing.setTitle(\"发布需求\", forState: UIControlState.Normal)\n        writing.titleLabel?.font = UIFont.systemFontOfSize(16)\n        //writing.titleLabel!.textAlignment =  NSTextAlignment.Left\n        //设置按钮中Title的位置\n        writing.contentHorizontalAlignment = UIControlContentHorizontalAlignment.Left\n        writing.titleEdgeInsets = UIEdgeInsetsMake(0, 10, 10, 10);\n        writing.setTitleColor(UIColor.whiteColor(), forState: UIControlState.Normal)\n        writing.showsTouchWhenHighlighted = true\n        writing.addTarget(self , action: Selector(\"Order\"), forControlEvents: UIControlEvents.TouchUpInside)\n      \n        \n        self.view.addSubview(writing)\n        \n        }\n    \n    override func viewDidLayoutSubviews() {\n        let width = self.view.frame.width\n        businessTable.frame =  CGRectMake(0, 100, width, self.view.frame.height-100)\n    }\n    \n    \n        //-------------------Table view data source-----------------------------\n        // 根据indexPath(section,row)创建每行cell及其内容\n \n    func tableView(tableView: UITableView, cellForRowAtIndexPath indexPath: NSIndexPath) -> UITableViewCell {\n        //            //创建cell\n                    print(\"创建cell\")\n                    let cell = tableView.dequeueReusableCellWithIdentifier(\"BusinessCell\", forIndexPath: indexPath) as! BusinessCell\n    \n                        let business = ServantData[indexPath.row] as ServantInfo\n                        cell.name.text = business.servantName //名称\n        \n                        //网络地址获取图片\n                        //1.定义一个地址字符串常量\n                       let imageUrlString:String = HttpData.http+\"/NationalService/\\(business.headPicture)\"\n                        //2.通过String类型，转换NSUrl对象\n                       let url:NSString = imageUrlString.URLEncodedString()\n                         cell.picture.setZYHWebImage(url as String, defaultImage: \"122.jpg\")\n        \n                        cell.address.text = business.servantGender\n                        cell.officePhone.text = \"\\(business.servantScore)分\"\n                        cell.businessArea.text = \"\\(business.workYears)年\"\n                        cell.dizhi.text = \"性别:\"\n                        cell.dianhua.text = \"人员评分:\"\n                        cell.quyu.text = \"从业年限:\"\n                         return cell\n    }\n    \n    \n    func Order (){\n        //读取用户信息，如果不是第一次登录，则会自动登录\n        readNSUerDefaults()\n        if customerid != \"\" && loginPassword != \"\"{\n            self.performSegueWithIdentifier(\"toOrder\", sender: self)\n        }else {\n            //            let alert =  UIAlertView(title: \"\", message: \"登录后才能预定哦!\", delegate: self, cancelButtonTitle: \"确定\")\n            //            alert.show()\n            let sb = UIStoryboard(name: \"Main\", bundle: nil)\n            let vc = sb.instantiateViewControllerWithIdentifier(\"LoginVC\") \n            self.presentViewController(vc, animated: true, completion: nil)\n        }\n        \n    }\n    \n    //导航条详情\n    func reply (){\n        self.dismissViewControllerAnimated(true, completion: nil)\n    }\n    \n\n    func  map(){\n        \n        self.performSegueWithIdentifier(\"toMap\", sender: self)\n    }\n\n    \n    func onMakeNavitem() -> UINavigationItem{\n        print(\"创建导航条step1b\")\n        //创建一个导航项\n        let navigationItem = UINavigationItem()\n        //创建左边.右边按钮\n        let leftButton =  UIBarButtonItem(barButtonSystemItem: UIBarButtonSystemItem.Reply, target: self, action: \"reply\")\n        \n        \n        let btn = UIButton(frame:CGRectMake(0, 0, 40, 40))\n        btn.setBackgroundImage(UIImage(named: \"map\"), forState: UIControlState.Normal)\n        btn.addTarget(self, action: \"map\", forControlEvents: UIControlEvents.TouchUpInside)\n        //var rightButton =  UIBarButtonItem(image: image, style: UIBarButtonItemStyle.Bordered, target: self, action: \"map\")\n        let rightButton = UIBarButtonItem(customView: btn)\n\n//        rightButton =  UIBarButtonItem(title: \"地图\", style: UIBarButtonItemStyle.Bordered, target: self, action: \"selection\")\n        //导航栏的标题\n        navigationItem.title = \"人员列表\"\n        //设置导航栏左边按钮\n        navigationItem.setLeftBarButtonItem(leftButton, animated: true)\n        navigationItem.setRightBarButtonItem(rightButton, animated: true)\n        navigationBar?.pushNavigationItem(navigationItem, animated: true)\n        return navigationItem\n    }\n \n \n        // Return the number of sections.\n        func numberOfSectionsInTableView(tableView: UITableView) -> Int {\n            return 1;//HttpData.channelTitles.count\n        }\n        \n        // Return the number of rows in the section.\n        func tableView(tableView: UITableView, numberOfRowsInSection section: Int) -> Int {\n         var  count = 0\n     \n            //返回人员数量作为表格的行数\n        count =   ServantData.count;\n \n        return count\n        \n    }\n    \n  \n    \n\n        \n        //-------------------Table view delegate-----------------------------\n        //cell响应事件\n        func tableView(tableView: UITableView, didSelectRowAtIndexPath indexPath: NSIndexPath) {\n         \n                 self.performSegueWithIdentifier(\"toServantDetail\", sender: self)\n            \n        }\n\n \n    \n    //change by LZF\n    func numberOfColumnsInMenu(menu: JSDropDownMenu!) -> Int\n    {\n        return 3\n    }\n    \n    func displayByCollectionViewInColumn(column: Int) -> Bool\n    {\n        return false;\n    }\n    \n    func haveRightTableViewInColumn(column: Int) -> Bool\n    {\n        return false;\n    }\n    \n    func widthRatioOfLeftColumn(column: Int) -> CGFloat\n    {\n        return 1;\n    }\n    \n    func currentLeftSelectedRow(column: Int) -> Int\n    {\n        if (column==0) {\n            \n            return currentData1Index;\n            \n        }\n        if (column==1) {\n            \n            return currentData2Index;\n        }\n        \n        return 0;\n    }\n    \n    func menu(menu: JSDropDownMenu!, numberOfRowsInColumn column: Int, leftOrRight: Int, leftRow: Int) -> Int {\n        \n        if (column==0) {\n            return data1.count;\n        } else if (column==1){\n            \n            return data2.count;\n            \n        } else if (column==2){\n            \n            return data3.count;\n        }\n        \n        return 0;\n    }\n    \n    func menu(menu: JSDropDownMenu!, titleForColumn column: Int) -> String! {\n        \n        switch (column) {\n        case 0:\n            return data1[0] as String\n            break\n        case 1:\n            return data2[0] as String\n            break\n        case 2:\n            return data3[0] as! String\n            break\n        default:\n            return nil\n            break\n        }\n    }\n    \n    func menu(menu: JSDropDownMenu!, titleForRowAtIndexPath indexPath: JSIndexPath!) -> String! {\n        \n        if (indexPath.column==0) {\n            return data1[indexPath.row] as String\n        } else if (indexPath.column==1) {\n            \n            return data2[indexPath.row] as String\n            \n        } else {\n            \n            return data3[indexPath.row] as! String\n        }\n    }\n    //点击触发\n \n    func menu(menu: JSDropDownMenu!, didSelectRowAtIndexPath indexPath: JSIndexPath!) {\n        \n        print(\"\\(indexPath.column),\\(indexPath.row)\")\n    \n        if (indexPath.column == 0) {\n            currentData1Index = indexPath.row\n            column0 = 0\n            row0   =  indexPath.row\n            print(\"\")\n            \n            \n        } else if(indexPath.column == 1){\n            \n            currentData2Index = indexPath.row;\n            row1   =  indexPath.row\n            print(\"点击完了\")\n           \n                data3 = [\"默认排序\",\"人员星级\"]\n                data31 = [\"\",\"servantScore\"]\n\n                rightButton.title = \"\"\n                writing.enabled = true\n                writing.hidden = false\n                \n        } else{\n            currentData3Index = indexPath.row;\n            row2   =  indexPath.row\n        }\n \n        facilitatorCounty = data11[row0] as String\n        SecondType  = data2[row1]\n        attributeName = data31[row2] as! String\n        \n        ServantData = refreshServant(SecondType,attributeName: attributeName,upDown: upDown,serviceArea: facilitatorCounty) as! [ServantInfo]\n        businessTable .reloadData()\n        saveNSUerDefaults ()\n  \n}\n    \n    override func didReceiveMemoryWarning() {\n        super.didReceiveMemoryWarning()\n        \n    }\n    //保存数据到NSUerDefaults\n    func saveNSUerDefaults () {\n        //将数据全部存储到NSUerDefaults中\n        let userDefaults:NSUserDefaults = NSUserDefaults.standardUserDefaults()\n        //存储时，除了NSNumber类型使用对应的类型外，其他的都使用setObject:forKey:\n        print(\"保存本地\")\n     \n        userDefaults.setObject( SecondType, forKey: \"ServiceType\")\n        //建议同步到磁盘，但不是必须得\n        userDefaults.synchronize()\n    }\n\n    \n    //从NSUerDefaults 中读取数据\n    func readNSUerDefaults () {\n        \n        let userDefaultes = NSUserDefaults.standardUserDefaults()\n        if  (userDefaultes.stringForKey(\"customerID\")) != nil && (userDefaultes.stringForKey(\"loginPassword\")) != nil{\n            customerid = userDefaultes.stringForKey(\"customerID\")!\n            loginPassword = userDefaultes.stringForKey(\"loginPassword\")!\n            \n        }\n        location = userDefaultes.stringForKey(\"location\")!\n        print(\"location\\(location)\")\n        \n    }\n\n\n    override func prepareForSegue(segue: UIStoryboardSegue, sender: AnyObject?) {\n         print(\"跳转传递数据\")\n        if segue.identifier==\"toServantDetail\"{\n            if let indexPath = self.businessTable.indexPathForSelectedRow{\n                let  object = ServantData[indexPath.row]\n                print(\"人员详情\")\n                (segue.destinationViewController as! workerViewController).workerdetail = object\n                print(\"人员详情\")\n            }\n        }else    if segue.identifier==\"toMap\"{\n            \n                let  object = SecondType\n                let",
 }
]

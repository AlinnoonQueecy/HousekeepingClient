[
 {
  "file": "/Users/zhang/Desktop/HouseKeeping 2/SHW/ServantData.swift",
  "offset": 4253,
  "remove": 15778,
  "text": "let url: NSURL! = NSURL(string: HttpData.http+\"/NationalService/MobileServantInfoAction?operation=_queryServants\")\n    \n    print(\"更新人员信息\")\n    \n    let request:NSMutableURLRequest = NSMutableURLRequest(URL:url, cachePolicy:NSURLRequestCachePolicy.UseProtocolCachePolicy,timeoutInterval: 10)\n    \n    request.HTTPMethod = \"POST\"\n    let param:String = \"{\\\"serviceItem\\\":\\\"\\(serviceType)\\\",\\\"attributeName\\\":\\\"\\(attributeName)\\\",\\\"upDown\\\":\\\"\\(upDown)\\\",\\\"serviceArea\\\":\\\"\\(serviceArea)\\\"}\"\n    print(\"param:\\(param)\")\n    let data:NSData = param.dataUsingEncoding(NSUTF8StringEncoding, allowLossyConversion: true)!\n    request.HTTPBody = data;\n    var response:NSURLResponse?\n    var error:NSError?\n    var receiveData:NSData?\n    do {\n        receiveData = try NSURLConnection.sendSynchronousRequest(request, returningResponse: &response)\n    } catch let error1 as NSError {\n        error = error1\n        receiveData = nil\n    }\n    if (error != nil)\n    {\n        print(error?.code)\n        print(error?.description)\n    }\n    else\n    {\n        let jsonString = NSString(data:receiveData!, encoding: NSUTF8StringEncoding)\n        print(jsonString)\n        \n    }\n    \n    let json:AnyObject! = try? NSJSONSerialization.JSONObjectWithData(receiveData!, options: NSJSONReadingOptions.AllowFragments)\n    let test1: AnyObject?=json.objectForKey(\"serverResponse\")\n    let serverResponse:String = test1 as! String\n    var ServantData:[ServantInfo] = []\n    if serverResponse == \"Success\" {\n        let test2: AnyObject?=json.objectForKey(\"data\")\n        let jsonArray = test2 as? NSArray\n        var count = jsonArray?.count\n        \n        for value in jsonArray!{\n            let id:Int=value.objectForKey(\"id\") as! Int\n            let servantID:String=value.objectForKey(\"servantID\") as! String\n            let idCardNo:String=value.objectForKey(\"idCardNo\") as! String\n\n            let servantName:String=value.objectForKey(\"servantName\") as! String\n            let phoneNo:String=value.objectForKey(\"phoneNo\") as! String\n            \n            \n            \n            let servantMobil:String=value.objectForKey(\"servantMobil\") as! String\n            let servantNationality:String=value.objectForKey(\"servantNationality\") as! String\n            let isMarried:Bool=value.objectForKey(\"isMarried\") as! Bool\n\n            let educationLevel:String=value.objectForKey(\"educationLevel\") as! String\n            let trainingIntro:String=value.objectForKey(\"trainingIntro\") as! String\n            \n            \n            \n            let registerDate:String=value.objectForKey(\"registerDate\") as! String\n            let servantProvince:String=value.objectForKey(\"servantProvince\") as! String\n            let servantCity:String=value.objectForKey(\"servantCity\") as! String\n            let servantCounty:String=value.objectForKey(\"servantCounty\") as! String\n            let contactAddress:String=value.objectForKey(\"contactAddress\") as! String\n            \n            \n            \n            let serviceArea:String=value.objectForKey(\"serviceArea\") as! String\n            let qqNumber:String=value.objectForKey(\"qqNumber\") as! String\n            let servantBirthday:String=value.objectForKey(\"servantBirthday\") as! String\n              let servantGender:String=value.objectForKey(\"servantGender\") as! String\n            let headPicture:String=value.objectForKey(\"headPicture\") as! String\n            \n            \n            \n            let workYears:Float=value.objectForKey(\"workYears\") as! Float\n            let servantHonors:String=value.objectForKey(\"servantHonors\") as! String\n            let servantIntro:String = value.objectForKey(\"servantIntro\") as! String\n            let isStayHome:Bool = value.objectForKey(\"isStayHome\") as! Bool\n            let holidayInMonth:Int=value.objectForKey(\"holidayInMonth\") as! Int\n            \n            \n            let servantScore:String=value.objectForKey(\"servantScore\") as! String\n            let servantStatus:String=value.objectForKey(\"servantStatus\") as! String\n             let clientClick:Int = value.objectForKey(\"clientClick\") as! Int\n            let servantCategory:String = value.objectForKey(\"servantCategory\") as! String\n            let serviceItems:String = value.objectForKey(\"serviceItems\") as! String\n            \n            \n            let serviceCount:Int = value.objectForKey(\"serviceCount\") as! Int\n            let careerType:String = value.objectForKey(\"careerType\") as! String\n            let servantState:String = value.objectForKey(\"servantState\") as! String\n            let registerLongitude:Double = value.objectForKey(\"registerLongitude\") as! Double\n            let registerLatitude:Double = value.objectForKey(\"registerLatitude\") as! Double\n          \n            \n            let realLongitude:Double = value.objectForKey(\"realLongitude\") as! Double\n            let realLatitude:Double = value.objectForKey(\"realLatitude\") as! Double\n           \n            let emailAddress:String = value.objectForKey(\"emailAddress\") as! String\n            let servantAge:Int = value.objectForKey(\"servantAge\") as! Int\n            \n            \n            let obj:ServantInfo = ServantInfo(id :id,servantID:servantID,idCardNo:idCardNo,servantName:servantName,phoneNo :phoneNo,servantMobil:servantMobil,servantNationality:servantNationality\n                ,isMarried:isMarried,educationLevel:educationLevel,trainingIntro:trainingIntro,registerDate:registerDate,servantProvince:servantProvince,servantCity:servantCity,servantCounty:servantCounty,contactAddress:contactAddress, serviceArea:serviceArea,qqNumber:qqNumber,servantBirthday:servantBirthday,servantGender:servantGender,headPicture:headPicture\n                ,workYears:workYears,servantHonors:servantHonors,servantIntro:servantIntro,isStayHome:isStayHome,holidayInMonth:holidayInMonth,servantScore: servantScore,servantStatus:servantStatus,clientClick:clientClick,servantCategory: servantCategory,serviceItems:serviceItems,serviceCount: serviceCount,careerType:careerType,servantState:servantState,registerLongitude:registerLongitude,registerLatitude:registerLatitude,realLongitude:realLongitude,realLatitude:realLatitude,emailAddress:emailAddress,servantAge:servantAge)\n            \n            ServantData += [obj]\n            \n        }\n    }\n    return ServantData\n    \n}\n\n \n\n\n//查询某人员是否被收藏（A）\nfunc GetServantCollect (servantID:String,customerID:String)->String{\n    let url: NSURL! = NSURL(string: HttpData.http+\"/NationalService/MobileServantCollectionAction?operation=_collectionQuery\")\n  \n    \n    let request:NSMutableURLRequest = NSMutableURLRequest(URL:url, cachePolicy:NSURLRequestCachePolicy.UseProtocolCachePolicy,timeoutInterval: 10)\n    \n    request.HTTPMethod = \"POST\"\n    //var param:String = \"{\\\"customerAccount\\\":\\\"Alex\\\",\\\"Password\\\":\\\"a123\\\"}\"\n    let param:String = \"{\\\"servantID\\\":\\\"\\(servantID)\\\",\\\"customerID\\\":\\\"\\(customerID)\\\"}\"\n    let data:NSData = param.dataUsingEncoding(NSUTF8StringEncoding, allowLossyConversion: true)!\n    request.HTTPBody = data;\n    var response:NSURLResponse?\n    var error:NSError?\n    var receiveData:NSData?\n    do {\n        receiveData = try NSURLConnection.sendSynchronousRequest(request, returningResponse: &response)\n    } catch let error1 as NSError {\n        error = error1\n        receiveData = nil\n    }\n    if (error != nil)\n    {\n        print(error?.code)\n        print(error?.description)\n    }\n    else\n    {\n        let jsonString = NSString(data:receiveData!, encoding: NSUTF8StringEncoding)\n        print(jsonString)\n        \n    }\n    \n    let json:AnyObject! = try? NSJSONSerialization.JSONObjectWithData(receiveData!, options: NSJSONReadingOptions.AllowFragments)\n    print(\"json:\\(json)\")\n    \n     var isCollected :String = \"\"\n     let test1: AnyObject?=json.objectForKey(\"serverResponse\")\n     let  serviceresponse:String = test1  as! String\n    \n     if  serviceresponse == \"Success\"{\n        \n   let collect: AnyObject?=json.objectForKey(\"isCollected\")\n        isCollected = collect as! String\n        \n       print(\"isCollected\\(isCollected)\")\n    }\n    \n    \n    return isCollected\n}\n//取消人员收藏时的函数（A）\nfunc deleteSCollection(customerID:String,servantID:String) ->String  {\n//要改URL\n    let url: NSURL! = NSURL(string: HttpData.http+\"/NationalService/MobileServantCollectionAction?operation=_delete\")\n\nlet request:NSMutableURLRequest = NSMutableURLRequest(URL:url, cachePolicy:NSURLRequestCachePolicy.UseProtocolCachePolicy,timeoutInterval: 10)\n\nrequest.HTTPMethod = \"POST\"\n//要改参数类型\nlet param:String = \"{\\\"customerID\\\":\\\"\\(customerID)\\\",\\\"servantID\\\":\\\"\\(servantID)\\\"}\"\n\nlet data:NSData = param.dataUsingEncoding(NSUTF8StringEncoding, allowLossyConversion: true)!\nrequest.HTTPBody = data;\nvar response:NSURLResponse?\nvar error:NSError?\n    var receiveData:NSData?\n    do {\n        receiveData = try NSURLConnection.sendSynchronousRequest(request, returningResponse: &response)\n    } catch let error1 as NSError {\n        error = error1\n        receiveData = nil\n    }\nif (error != nil)\n{\nprint(error?.code)\nprint(error?.description)\n}\nelse\n{\nlet jsonString = NSString(data:receiveData!, encoding: NSUTF8StringEncoding)\nprint(jsonString)\n\n}\n\nlet json:AnyObject! = try? NSJSONSerialization.JSONObjectWithData(receiveData!, options: NSJSONReadingOptions.AllowFragments)\n\n\n\nlet serviceresponse: AnyObject?=json.objectForKey(\"serverResponse\")\nlet Response :String = serviceresponse as! String\n\n\nreturn Response\n}\n//添加人员收藏时的函数(A)\nfunc addSCollection(customerid:String,servantid:String,servantname:String) ->String  {\n    //要改URL\n    \n    let url: NSURL! = NSURL(string:HttpData.http+\"/NationalService/MobileServantCollectionAction?operation=_add\")\n    \n    let request:NSMutableURLRequest = NSMutableURLRequest(URL:url, cachePolicy:NSURLRequestCachePolicy.UseProtocolCachePolicy,timeoutInterval: 10)\n    \n    request.HTTPMethod = \"POST\"\n    //要改参数类型\n    print(\"servantname\\(servantname)\")\n   let param:String = \"{\\\"customerID\\\":\\\"\\(customerid)\\\",\\\"servantID\\\":\\\"\\(servantid)\\\",\\\"servantName\\\":\\\"\\(servantname)\\\"}\"\n     print(param)\n    print(\"typeName\\(servantname)\")\n    let data:NSData = param.dataUsingEncoding(NSUTF8StringEncoding, allowLossyConversion: true)!\n    request.HTTPBody = data;\n    var response:NSURLResponse?\n    var error:NSError?\n    var receiveData:NSData?\n    do {\n        receiveData = try NSURLConnection.sendSynchronousRequest(request, returningResponse: &response)\n    } catch let error1 as NSError {\n        error = error1\n        receiveData = nil\n    }\n    if (error != nil)\n    {\n        print(error?.code)\n        print(error?.description)\n    }\n    else\n    {\n        let jsonString = NSString(data:receiveData!, encoding: NSUTF8StringEncoding)\n        print(jsonString)\n        \n    }\n    \n    let json:AnyObject! = try? NSJSONSerialization.JSONObjectWithData(receiveData!, options: NSJSONReadingOptions.AllowFragments)\n    \n    \n    let serviceresponse: AnyObject?=json.objectForKey(\"serverResponse\")\n    let Response :String = serviceresponse as! String\n    \n    \n    return Response\n}\n\n\n\n\n\n\n//class CommentInfo:NSObject {\n//    \n//    var id :Int\n//    var servantID:String\n//    var servantName:String\n//    var customerID :String\n//    var customerName:String\n//    var commentContent:String\n//    var commentDate:String\n//    \n//    init(id:Int,servantID:String,servantName:String,customerID:String,customerName:String,commentContent:String,commentDate:String ){\n//            self.id = id\n//            self.servantID = servantID\n//            self.servantName = servantName\n//            self.customerID = customerID\n//            self.customerName = customerName\n//            self.commentContent = commentContent\n//            self.commentDate = commentDate\n//        \n//            super.init()\n//    }\n//    \n//}\nclass CommentInfo:NSObject {\n    \n    var id :Int\n    var servantID:String\n    var servantName:String\n    var customerID :String\n    var customerName:String\n    var commentContent:String\n    var commentDate:String\n    \n    init(id:Int,servantID:String,servantName:String,customerID:String,customerName:String,commentContent:String,commentDate:String ){\n        self.id = id\n        self.servantID = servantID\n        self.servantName = servantName\n        self.customerID = customerID\n        self.customerName = customerName\n        self.commentContent = commentContent\n        self.commentDate = commentDate\n        \n        super.init()\n    }\n    \n}\n//查询客户对人员的评价(A)\nfunc getSconmmentData(servantID:String) ->NSArray  {\n    let url: NSURL! = NSURL(string: HttpData.http+\"/NationalService/MobileServantInfoAction?operation=_queryComment\")\n    \n    let request:NSMutableURLRequest = NSMutableURLRequest(URL:url, cachePolicy:NSURLRequestCachePolicy.UseProtocolCachePolicy,timeoutInterval: 10)\n    \n    request.HTTPMethod = \"POST\"\n \n    let param:String = \"{\\\"servantID\\\":\\\"\\(servantID)\\\"}\"\n    print(\"评价param\\(param)\")\n    \n    let data:NSData = param.dataUsingEncoding(NSUTF8StringEncoding, allowLossyConversion: true)!\n    request.HTTPBody = data;\n    var response:NSURLResponse?\n    var error:NSError?\n    var receiveData:NSData?\n    do {\n        receiveData = try NSURLConnection.sendSynchronousRequest(request, returningResponse: &response)\n    } catch let error1 as NSError {\n        error = error1\n        receiveData = nil\n    }\n    if (error != nil)\n    {\n        print(error?.code)\n        print(error?.description)\n    }\n    else\n    {\n        let jsonString = NSString(data:receiveData!, encoding: NSUTF8StringEncoding)\n        print(jsonString)\n        \n    }\n    \n    let json:AnyObject! = try? NSJSONSerialization.JSONObjectWithData(receiveData!, options: NSJSONReadingOptions.AllowFragments)\n    //var finishinfo = finishinfo()\n    //var FinishData:[finishinfo] = []\n    var CommentData:[CommentInfo] = []\n    let test1: AnyObject?=json.objectForKey(\"serverResponse\")\n    let response1 :String = test1 as! String\n    if response1 == \"Success\" {\n    let test2: AnyObject?=json.objectForKey(\"data\")\n    let jsonArray = test2 as? NSArray\n    var count = jsonArray?.count\n    \n    for value in jsonArray!{\n        let id:Int=value.objectForKey(\"id\") as! Int\n        let servantID:String=value.objectForKey(\"servantID\") as! String\n        let servantName:String=value.objectForKey(\"servantName\") as! String\n        let customerID:String=value.objectForKey(\"customerID\") as! String\n         let customerName:String=value.objectForKey(\"customerName\") as! String\n        let commentContent:String=value.objectForKey(\"commentContent\") as! String\n        let commentDate:String=value.objectForKey(\"commentDate\") as! String\n        \n        let obj:CommentInfo = CommentInfo(id:id,servantID:servantID,servantName:servantName,customerID:customerID,customerName:customerName,commentContent:commentContent,commentDate:commentDate)\n        \n        CommentData += [obj]\n        \n        }\n    }\n    return CommentData\n    \n}\n//判断是不是有评论\nfunc getResponse(servantID:String) ->String  {\n    let url: NSURL! = NSURL(string: HttpData.http+\"/FamilyServiceSystem/MobileServiceOrderAction?operation=_queryServantComment\")\n    \n    let request:NSMutableURLRequest = NSMutableURLRequest(URL:url, cachePolicy:NSURLRequestCachePolicy.UseProtocolCachePolicy,timeoutInterval: 10)\n    \n    request.HTTPMethod = \"POST\"\n    \n    let param:String = \"{\\\"servantID\\\":\\\"\\(servantID)\\\"}\"\n    let data:NSData = param.dataUsingEncoding(NSUTF8StringEncoding, allowLossyConversion: true)!\n    request.HTTPBody = data;\n    var response:NSURLResponse?\n    var error:NSError?\n    var receiveData:NSData?\n    do {\n        receiveData = try NSURLConnection.sendSynchronousRequest(request, returningResponse: &response)\n    } catch let error1 as NSError {\n        error = error1\n        receiveData = nil\n    }\n    if (error != nil)\n    {\n        print(error?.code)\n        print(error?.description)\n    }\n    else\n    {\n        let jsonString = NSString(data:receiveData!, encoding: NSUTF8StringEncoding)\n        print(jsonString)\n        \n    }\n    \n    let json:AnyObject! = try? NSJSONSerialization.JSONObjectWithData(receiveData!, options: NSJSONReadingOptions.AllowFragments)\n    //var finishinfo = finishinfo()\n    //var FinishData:[finishinfo] = []\n    let",
 }
]

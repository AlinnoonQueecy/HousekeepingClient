[
 {
  "file": "/Users/zhang/Desktop/HouseKeeping 2/SHW/CommonOrder.swift",
  "offset": 1253,
  "remove": 12616,
  "text": "let height = self.view.frame.height\n        let labelW = self.view.frame.width - 20\n        \n        //实例化导航条\n        navigationBar = UINavigationBar(frame: CGRectMake(0, 0, width, 64))\n        self.view.addSubview(navigationBar!)\n        print(\"创建导航条详情\")\n        onMakeNavitem()\n        //1、创建手势实例，并连接方法UITapGestureRecognizer,点击手势\n        let recognizer =  UITapGestureRecognizer(target:self, action:\"touchScrollView:\")\n        print(\"touchScrollView\")\n        \n        //设置手势点击数,点1下\n        recognizer.numberOfTapsRequired = 1\n        \n        //recognizer.numberOfTouchesRequired = 1\n        \n        scrollView.addGestureRecognizer(recognizer)\n        NSNotificationCenter.defaultCenter().addObserver(self,selector:Selector(\"keyboardWillShow:\"),name:UIKeyboardWillShowNotification,object:nil)\n        NSNotificationCenter.defaultCenter().addObserver(self,selector:Selector(\"keyboardWillHide:\"),name:UIKeyboardWillHideNotification,object:nil)\n        \n        //添加scrollview\n        scrollView.delegate = self\n \n        //scrollView.bounds = self.view.bounds\n        scrollView.frame = CGRectMake(0, 64,width,height)\n        scrollView.contentSize=CGSizeMake(width,height*5)\n        //scrollView.contentInset = UIEdgeInsetsMake(-64,0,0, 0)\n        //不可翻页\n        scrollView.pagingEnabled = false\n        //不显示横向滑竿\n        scrollView.showsHorizontalScrollIndicator = false\n        //不显示纵向滑竿\n        scrollView.showsVerticalScrollIndicator = false\n        //设置不可下拉\n        scrollView.bounces = false\n        scrollView.scrollsToTop = false\n        self.view.addSubview(scrollView)\n        \n        //订单信息\n         orderY = CGFloat(0)\n        let order = UIButton(frame: CGRectMake(15, orderY, width-30, 30))\n        order.setTitle(\"订单信息\", forState: UIControlState.Normal)\n        order.setTitleColor(UIColor.orangeColor(), forState: UIControlState.Normal)\n        order.contentHorizontalAlignment = UIControlContentHorizontalAlignment.Left\n        order.setBackgroundImage(UIImage(named: \"listBackground\"), forState: UIControlState.Normal)\n        order.titleLabel?.font = UIFont.systemFontOfSize(17)\n        scrollView.addSubview(order)\n        \n        let facilitatorID = UILabel(frame: CGRectMake(15, orderY+35, labelW, 25))\n        facilitatorID.text = \"店铺名称:\\(OrderData!.facilitatorID)\"\n        facilitatorID.textColor = UIColor.blackColor()\n        facilitatorID.font = UIFont.systemFontOfSize(15)\n        scrollView.addSubview(facilitatorID)\n        \n        let servantName1 = UILabel(frame: CGRectMake(15, orderY+35+25, labelW, 25))\n        servantName1.text = \"服务项目:\\(OrderData.serviceType)\"\n        servantName1.textColor = UIColor.blackColor()\n        servantName1.font = UIFont.systemFontOfSize(15)\n        scrollView.addSubview(servantName1)\n        \n        //服务项目\n        let itemName = UILabel(frame: CGRectMake(15, orderY+35+2*25, labelW, 25))\n        itemName.text = \"服务费用:面议\"\n        itemName.textColor = UIColor.blackColor()\n        itemName.font = UIFont.systemFontOfSize(15)\n        scrollView.addSubview(itemName)\n        \n         customerInfoY  =  orderY+35+3*25+20\n        let customerN = UILabel(frame: CGRectMake(15, customerInfoY, labelW, 25))\n        customerN.text = \"客户姓名: \"\n        customerN.textColor = UIColor.blackColor()\n        customerN.font = UIFont.systemFontOfSize(15)\n        scrollView.addSubview(customerN)\n        customerName = UITextField(frame: CGRectMake(80, customerInfoY, width-90, 30))\n        customerName.borderStyle = UITextBorderStyle.RoundedRect\n        customerName.clearButtonMode=UITextFieldViewMode.WhileEditing\n        //编辑时出现清除按钮\n        customerName.text = myinfo.customerName\n        scrollView.addSubview(customerName)\n\n        servantID = UILabel(frame: CGRectMake(15, customerInfoY+35, 80, 25))\n        servantID!.text = \"联系地址:\"\n        servantID!.textColor = UIColor.blackColor()\n        servantID!.font = UIFont.systemFontOfSize(15)\n        scrollView.addSubview(servantID!)\n        dizhi = UITextField(frame: CGRectMake(80, customerInfoY+35, width-90, 30))\n        dizhi.borderStyle = UITextBorderStyle.RoundedRect\n        dizhi.clearButtonMode=UITextFieldViewMode.WhileEditing\n        //编辑时出现清除按钮\n        dizhi.adjustsFontSizeToFitWidth=true  //当文字超出文本框宽度时，自动调整文字大小\n        dizhi.minimumFontSize=12\n\n        dizhi.text = myinfo.contactAddress\n        scrollView.addSubview(dizhi)\n        \n        \n        let serviceType = UILabel(frame: CGRectMake(15, customerInfoY+70, 80, 25))\n        serviceType.text = \"联系电话:\"\n        serviceType.textColor = UIColor.blackColor()\n        serviceType.font = UIFont.systemFontOfSize(15)\n        scrollView.addSubview(serviceType)\n        dianhua = UITextField(frame: CGRectMake(80, customerInfoY+70, width-90, 30))\n        dianhua.text = myinfo.phoneNo\n        dianhua.adjustsFontSizeToFitWidth=true  //当文字超出文本框宽度时，自动调整文字大小\n        dianhua.minimumFontSize=12\n        \n\n        dianhua.borderStyle = UITextBorderStyle.RoundedRect\n        dianhua.clearButtonMode=UITextFieldViewMode.WhileEditing\n        //编辑时出现清除按钮\n        scrollView.addSubview(dianhua)\n        \n        //价格\n        let remark = UILabel(frame: CGRectMake(15, customerInfoY+105,50, 20))\n        remark.text = \"备注:\"\n        remark.textColor = UIColor.blackColor()\n        remark.font = UIFont.systemFontOfSize(15)\n        scrollView.addSubview(remark)\n        beizhu = UITextView(frame: CGRectMake(80, customerInfoY+105,width-90, 30))\n        //字体\n        beizhu.font = UIFont.systemFontOfSize(15)\n        beizhu.textColor = UIColor.blackColor()\n        \n        //边框粗细\n        beizhu.layer.borderWidth = 1\n        //边框颜色\n        beizhu.layer.borderColor = UIColor.grayColor().CGColor\n        //圆角\n        beizhu.layer.cornerRadius = 5\n        //是否可以滚动\n        beizhu.scrollEnabled = true\n        //自适应高度\n        beizhu.autoresizingMask = UIViewAutoresizing.FlexibleHeight\n        //使文本框在界面打开时就获取焦点，并弹出输入键盘\n        //        ReasonField.becomeFirstResponder()\n        //使文本框失去焦点，并收回键盘\n        beizhu.resignFirstResponder()\n        //键盘形式\n        beizhu.keyboardType = UIKeyboardType.Twitter\n        scrollView.addSubview(beizhu)\n        //预定按钮\n         CBY = customerInfoY+115+30\n        yuyue = UIButton(frame:CGRectMake(width/2-125, CBY,250,30))\n        yuyue! .setTitle(\"确认预订\", forState:UIControlState.Normal)\n        yuyue!.setTitleColor(UIColor.whiteColor(), forState: UIControlState.Normal)\n        yuyue!.titleLabel?.font = UIFont.systemFontOfSize(15)\n        yuyue!.contentHorizontalAlignment = UIControlContentHorizontalAlignment.Center\n        yuyue!.showsTouchWhenHighlighted = true\n        yuyue?.layer.cornerRadius = 5\n        yuyue!.backgroundColor = UIColor.orangeColor()\n        scrollView.addSubview(yuyue!)\n        yuyue!.addTarget(self , action:Selector(\"yuding:\"), forControlEvents: UIControlEvents.TouchUpInside)\n        \n        \n        scrollView.contentSize = CGSizeMake(width,64+CBY+30+253)\n        print(scrollView.bounds.height)\n        \n        // Do any additional setup after loading the view.\n    }\n    \n    override func didReceiveMemoryWarning() {\n        super.didReceiveMemoryWarning()\n        // Dispose of any resources that can be recreated.\n    }\n    //预定的跳转函数\n    func yuding(yuyue:UIButton){\n        if dianhua.text == \"\" || dizhi.text.lengthOfBytesUsingEncoding(NSUTF8StringEncoding) != 11{\n            let alert =  UIAlertView(title: \"\", message: \"请填写正确的电话和地址!\", delegate: self, cancelButtonTitle: \"确定\")\n            // alert.tag = 1\n            alert.show()\n            \n            \n            \n        }else {\n        var url: NSURL! = NSURL(string:HttpData.http+\"/FamilyServiceSystem/MobileServiceOrderAction?operation=_add\")\n        \n        \n        var request:NSMutableURLRequest = NSMutableURLRequest(URL: url, cachePolicy:NSURLRequestCachePolicy.UseProtocolCachePolicy,timeoutInterval: 10)\n        \n        request.HTTPMethod = \"POST\"\n        \n        var param:String = \"{\\\"customerID\\\":\\\"\\(customerid)\\\",\\\"customerName\\\":\\\"\\(customerName.text)\\\",\\\"facilitatorID\\\":\\\"\\(OrderData.facilitatorID)\\\",\\\"facilitatorName\\\":\\\"\\(OrderData.facilitatorName)\\\",\\\"servantName\\\":\\\"\\\",\\\"servantID\\\":\\\"\\\",\\\"serviceType\\\":\\\"\\(OrderData.serviceType)\\\",\\\"itemName\\\":\\\"\\(OrderData.itemName)\\\",\\\"itemID\\\":\\\"\\\",\\\"serviceContent\\\":\\\"\\(beizhu.text)\\\",\\\"servicePrice\\\":\\\"\\(OrderData.priceDescription)\\\",\\\"isPackage\\\":\\\"false\\\",\\\"contactAddress\\\":\\\"\\(dizhi.text)\\\",\\\"contactPhone\\\":\\\"\\(dianhua.text)\\\"}\"\n        print(\"param\")\n        print(param)\n        \n        var data:NSData = param.dataUsingEncoding(NSUTF8StringEncoding, allowLossyConversion: true)!\n        request.HTTPBody = data;\n        var response:NSURLResponse?\n        var error:NSError?\n        var receiveData:NSData?\n        do {\n            receiveData = try NSURLConnection.sendSynchronousRequest(request, returningResponse: &response)\n        } catch var error1 as NSError {\n            error = error1\n            receiveData = nil\n        }\n        if (error != nil)\n        {\n            print(error?.code)\n            print(error?.description)\n        }\n        else\n        {\n            var jsonString = NSString(data:receiveData!, encoding: NSUTF8StringEncoding)\n            print(jsonString)\n            \n        }\n        \n        let json:AnyObject? = try? NSJSONSerialization.JSONObjectWithData(receiveData!, options: NSJSONReadingOptions.AllowFragments)\n        //        var dic = dict as! NSDictionary\n        print(json)\n        let serverResponse = json!.objectForKey(\"serverResponse\") as? String\n        //let orderNo = json!.objectForKey(\"OrderNo\") as? String\n        \n        print(\"orderNo:\\(orderNo)\")\n        if serverResponse == \"Success\"{\n            \n            let alert =  UIAlertView(title: \"预定成功\", message: \"商家会尽快与您取得联系!\", delegate: self, cancelButtonTitle: \"确定\")\n            alert.tag = 1\n            alert.show()\n            \n            \n        }else if serverResponse == \"Failed\"{\n            \n            let alert =  UIAlertView(title: \"预定失败\", message: \"请重试\", delegate: self, cancelButtonTitle: \"确定\")\n            alert.show()\n            \n          }\n        \n        }\n    }\n    func  alertView(alertView: UIAlertView, clickedButtonAtIndex buttonIndex: Int) {\n        if alertView.tag == 1{\n            self.dismissViewControllerAnimated(true, completion: nil)\n        }\n\n        \n        //self.performSegueWithIdentifier(\"OrderServantTo\", sender: self)\n    }\n    //导航条详情\n    func reply (){\n        self.dismissViewControllerAnimated(true, completion: nil)\n    }\n    \n    func onMakeNavitem() -> UINavigationItem{\n        print(\"创建导航条step1\")\n        //创建一个导航项\n        let navigationItem = UINavigationItem()\n        //创建左边按钮\n        let leftButton =  UIBarButtonItem(barButtonSystemItem: UIBarButtonSystemItem.Reply, target: self, action: \"reply\")\n        //var leftButton =  UIBarButtonItem(title: \"返回\", style: UIBarButtonItemStyle.Bordered, target: self, action: \"reply\")\n        //导航栏的标题\n        navigationItem.title = \"订单详情\"\n        //设置导航栏左边按钮\n        navigationItem.setLeftBarButtonItem(leftButton, animated: true)\n        \n        navigationBar?.pushNavigationItem(navigationItem, animated: true)\n        \n        \n        return navigationItem\n    }\n    \n    //从NSUerDefaults 中读取数据\n    func readNSUerDefaults () {\n        \n        let userDefaultes = NSUserDefaults.standardUserDefaults()\n        if  (userDefaultes.stringForKey(\"customerID\")) != nil && (userDefaultes.stringForKey(\"loginPassword\")) != nil{\n            customerid = userDefaultes.stringForKey(\"customerID\")!\n            loginPassword = userDefaultes.stringForKey(\"loginPassword\")!\n        }\n    }\n    /*\n    // MARK: - Navigation\n    \n    // In a storyboard-based application, you will often want to do a little preparation before navigation\n    override func prepareForSegue(segue: UIStoryboardSegue, sender: AnyObject?) {\n    // Get the new view controller using segue.destinationViewController.\n    // Pass the selected object to the new view controller.\n    }\n    */\n    func touchScrollView(sender: UITapGestureRecognizer){\n        print",
 }
]
